/*
 * DO NOT EDIT.
 *
 * Generated by the protocol buffer compiler.
 * Source: OpenAPIv2.proto
 *
 */

//  Copyright 2016 Google Inc. All Rights Reserved.
// 
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.

//  THIS FILE IS AUTOMATICALLY GENERATED.

import Foundation
import SwiftProtobuf


public struct Openapi_V2_AdditionalPropertiesItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_AdditionalPropertiesItem"}
  public var protoMessageName: String {return "AdditionalPropertiesItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "schema": 1,
    "boolean": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "schema": 1,
    "boolean": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_AdditionalPropertiesItem
    var _oneof = Openapi_V2_AdditionalPropertiesItem.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 3)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case schema(Openapi_V2_Schema)
    case boolean(Bool)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_Schema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Schema.self, value: &value)
        if let value = value, handled {
          self = .schema(value)
        }
      case 2:
        var value = Bool()
        handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &value)
        self = .boolean(value)
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .schema(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "schema", jsonFieldName: "schema", swiftFieldName: "schema")
        }
      case .boolean(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularField(fieldType: ProtobufBool.self, value: v, protoFieldNumber: 2, protoFieldName: "boolean", jsonFieldName: "boolean", swiftFieldName: "boolean")
        }
      case .None:
        break
      }
    }
  }

  public var schema: Openapi_V2_Schema {
    get {
      if case .schema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Schema()
    }
    set {
      _uniqueStorage()._oneof = .schema(newValue)
    }
  }

  public var boolean: Bool {
    get {
      if case .boolean(let v) = _storage._oneof {
        return v
      }
      return false
    }
    set {
      _uniqueStorage()._oneof = .boolean(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_AdditionalPropertiesItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Any: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Any"}
  public var protoMessageName: String {return "Any"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "yaml": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "yaml": 1,
  ]}

  public var yaml: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &yaml)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if yaml != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: yaml, protoFieldNumber: 1, protoFieldName: "yaml", jsonFieldName: "yaml", swiftFieldName: "yaml")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Any) -> Bool {
    if yaml != other.yaml {return false}
    return true
  }
}

public struct Openapi_V2_ApiKeySecurity: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ApiKeySecurity"}
  public var protoMessageName: String {return "ApiKeySecurity"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "name": 2,
    "in": 3,
    "description": 4,
    "vendorExtension": 5,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "name": 2,
    "in": 3,
    "description": 4,
    "vendor_extension": 5,
  ]}

  public var type: String = ""

  public var name: String = ""

  public var in_p: String = ""

  public var description_p: String = ""

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &type)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &in_p)
    case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &description_p)
    case 5: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if type != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
    }
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 2, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if in_p != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: in_p, protoFieldNumber: 3, protoFieldName: "in", jsonFieldName: "in", swiftFieldName: "in_p")
    }
    if description_p != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: description_p, protoFieldNumber: 4, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 5, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ApiKeySecurity) -> Bool {
    if type != other.type {return false}
    if name != other.name {return false}
    if in_p != other.in_p {return false}
    if description_p != other.description_p {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

public struct Openapi_V2_BasicAuthenticationSecurity: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_BasicAuthenticationSecurity"}
  public var protoMessageName: String {return "BasicAuthenticationSecurity"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "description": 2,
    "vendorExtension": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "description": 2,
    "vendor_extension": 3,
  ]}

  public var type: String = ""

  public var description_p: String = ""

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &type)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &description_p)
    case 3: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if type != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
    }
    if description_p != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: description_p, protoFieldNumber: 2, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 3, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_BasicAuthenticationSecurity) -> Bool {
    if type != other.type {return false}
    if description_p != other.description_p {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

public struct Openapi_V2_BodyParameter: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_BodyParameter"}
  public var protoMessageName: String {return "BodyParameter"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "description": 1,
    "name": 2,
    "in": 3,
    "required": 4,
    "schema": 5,
    "vendorExtension": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "description": 1,
    "name": 2,
    "in": 3,
    "required": 4,
    "schema": 5,
    "vendor_extension": 6,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_BodyParameter
    var _description_p: String = ""
    var _name: String = ""
    var _in_p: String = ""
    var _required: Bool = false
    var _schema: Openapi_V2_Schema? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_in_p)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_required)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Schema.self, value: &_schema)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 1, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 2, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if _in_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _in_p, protoFieldNumber: 3, protoFieldName: "in", jsonFieldName: "in", swiftFieldName: "in_p")
      }
      if _required != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _required, protoFieldNumber: 4, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if let v = _schema {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "schema", jsonFieldName: "schema", swiftFieldName: "schema")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 6, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _description_p != other._description_p {return false}
      if _name != other._name {return false}
      if _in_p != other._in_p {return false}
      if _required != other._required {return false}
      if _schema != other._schema {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._description_p = _description_p
      clone._name = _name
      clone._in_p = _in_p
      clone._required = _required
      clone._schema = _schema
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  ///   The name of the parameter.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Determines the location of the parameter.
  public var in_p: String {
    get {return _storage._in_p}
    set {_uniqueStorage()._in_p = newValue}
  }

  ///   Determines whether or not this parameter is required or optional.
  public var required: Bool {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  public var schema: Openapi_V2_Schema {
    get {return _storage._schema ?? Openapi_V2_Schema()}
    set {_uniqueStorage()._schema = newValue}
  }
  public var hasSchema: Bool {
    return _storage._schema != nil
  }
  public mutating func clearSchema() {
    return _storage._schema = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_BodyParameter) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Contact information for the owners of the API.
public struct Openapi_V2_Contact: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Contact"}
  public var protoMessageName: String {return "Contact"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "url": 2,
    "email": 3,
    "vendorExtension": 4,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "url": 2,
    "email": 3,
    "vendor_extension": 4,
  ]}

  ///   The identifying name of the contact person/organization.
  public var name: String = ""

  ///   The URL pointing to the contact information.
  public var url: String = ""

  ///   The email address of the contact person/organization.
  public var email: String = ""

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &url)
    case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &email)
    case 4: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if url != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: url, protoFieldNumber: 2, protoFieldName: "url", jsonFieldName: "url", swiftFieldName: "url")
    }
    if email != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: email, protoFieldNumber: 3, protoFieldName: "email", jsonFieldName: "email", swiftFieldName: "email")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 4, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Contact) -> Bool {
    if name != other.name {return false}
    if url != other.url {return false}
    if email != other.email {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

public struct Openapi_V2_Default: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Default"}
  public var protoMessageName: String {return "Default"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Default) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

///   One or more JSON objects describing the schemas being consumed and produced by the API.
public struct Openapi_V2_Definitions: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Definitions"}
  public var protoMessageName: String {return "Definitions"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedSchema] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedSchema.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Definitions) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_Document: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Document"}
  public var protoMessageName: String {return "Document"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "swagger": 1,
    "info": 2,
    "host": 3,
    "basePath": 4,
    "schemes": 5,
    "consumes": 6,
    "produces": 7,
    "paths": 8,
    "definitions": 9,
    "parameters": 10,
    "responses": 11,
    "security": 12,
    "securityDefinitions": 13,
    "tags": 14,
    "externalDocs": 15,
    "vendorExtension": 16,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "swagger": 1,
    "info": 2,
    "host": 3,
    "base_path": 4,
    "schemes": 5,
    "consumes": 6,
    "produces": 7,
    "paths": 8,
    "definitions": 9,
    "parameters": 10,
    "responses": 11,
    "security": 12,
    "security_definitions": 13,
    "tags": 14,
    "external_docs": 15,
    "vendor_extension": 16,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Document
    var _swagger: String = ""
    var _info: Openapi_V2_Info? = nil
    var _host: String = ""
    var _basePath: String = ""
    var _schemes: [String] = []
    var _consumes: [String] = []
    var _produces: [String] = []
    var _paths: Openapi_V2_Paths? = nil
    var _definitions: Openapi_V2_Definitions? = nil
    var _parameters: Openapi_V2_ParameterDefinitions? = nil
    var _responses: Openapi_V2_ResponseDefinitions? = nil
    var _security: [Openapi_V2_SecurityRequirement] = []
    var _securityDefinitions: Openapi_V2_SecurityDefinitions? = nil
    var _tags: [Openapi_V2_Tag] = []
    var _externalDocs: Openapi_V2_ExternalDocs? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_swagger)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Info.self, value: &_info)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_host)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_basePath)
      case 5: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_schemes)
      case 6: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_consumes)
      case 7: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_produces)
      case 8: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Paths.self, value: &_paths)
      case 9: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Definitions.self, value: &_definitions)
      case 10: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ParameterDefinitions.self, value: &_parameters)
      case 11: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ResponseDefinitions.self, value: &_responses)
      case 12: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_SecurityRequirement.self, value: &_security)
      case 13: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_SecurityDefinitions.self, value: &_securityDefinitions)
      case 14: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Tag.self, value: &_tags)
      case 15: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ExternalDocs.self, value: &_externalDocs)
      case 16: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _swagger != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _swagger, protoFieldNumber: 1, protoFieldName: "swagger", jsonFieldName: "swagger", swiftFieldName: "swagger")
      }
      if let v = _info {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "info", jsonFieldName: "info", swiftFieldName: "info")
      }
      if _host != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _host, protoFieldNumber: 3, protoFieldName: "host", jsonFieldName: "host", swiftFieldName: "host")
      }
      if _basePath != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _basePath, protoFieldNumber: 4, protoFieldName: "base_path", jsonFieldName: "basePath", swiftFieldName: "basePath")
      }
      if !_schemes.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _schemes, protoFieldNumber: 5, protoFieldName: "schemes", jsonFieldName: "schemes", swiftFieldName: "schemes")
      }
      if !_consumes.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _consumes, protoFieldNumber: 6, protoFieldName: "consumes", jsonFieldName: "consumes", swiftFieldName: "consumes")
      }
      if !_produces.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _produces, protoFieldNumber: 7, protoFieldName: "produces", jsonFieldName: "produces", swiftFieldName: "produces")
      }
      if let v = _paths {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "paths", jsonFieldName: "paths", swiftFieldName: "paths")
      }
      if let v = _definitions {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "definitions", jsonFieldName: "definitions", swiftFieldName: "definitions")
      }
      if let v = _parameters {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 10, protoFieldName: "parameters", jsonFieldName: "parameters", swiftFieldName: "parameters")
      }
      if let v = _responses {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 11, protoFieldName: "responses", jsonFieldName: "responses", swiftFieldName: "responses")
      }
      if !_security.isEmpty {
        try visitor.visitRepeatedMessageField(value: _security, protoFieldNumber: 12, protoFieldName: "security", jsonFieldName: "security", swiftFieldName: "security")
      }
      if let v = _securityDefinitions {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 13, protoFieldName: "security_definitions", jsonFieldName: "securityDefinitions", swiftFieldName: "securityDefinitions")
      }
      if !_tags.isEmpty {
        try visitor.visitRepeatedMessageField(value: _tags, protoFieldNumber: 14, protoFieldName: "tags", jsonFieldName: "tags", swiftFieldName: "tags")
      }
      if let v = _externalDocs {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 15, protoFieldName: "external_docs", jsonFieldName: "externalDocs", swiftFieldName: "externalDocs")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 16, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _swagger != other._swagger {return false}
      if _info != other._info {return false}
      if _host != other._host {return false}
      if _basePath != other._basePath {return false}
      if _schemes != other._schemes {return false}
      if _consumes != other._consumes {return false}
      if _produces != other._produces {return false}
      if _paths != other._paths {return false}
      if _definitions != other._definitions {return false}
      if _parameters != other._parameters {return false}
      if _responses != other._responses {return false}
      if _security != other._security {return false}
      if _securityDefinitions != other._securityDefinitions {return false}
      if _tags != other._tags {return false}
      if _externalDocs != other._externalDocs {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._swagger = _swagger
      clone._info = _info
      clone._host = _host
      clone._basePath = _basePath
      clone._schemes = _schemes
      clone._consumes = _consumes
      clone._produces = _produces
      clone._paths = _paths
      clone._definitions = _definitions
      clone._parameters = _parameters
      clone._responses = _responses
      clone._security = _security
      clone._securityDefinitions = _securityDefinitions
      clone._tags = _tags
      clone._externalDocs = _externalDocs
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   The Swagger version of this document.
  public var swagger: String {
    get {return _storage._swagger}
    set {_uniqueStorage()._swagger = newValue}
  }

  public var info: Openapi_V2_Info {
    get {return _storage._info ?? Openapi_V2_Info()}
    set {_uniqueStorage()._info = newValue}
  }
  public var hasInfo: Bool {
    return _storage._info != nil
  }
  public mutating func clearInfo() {
    return _storage._info = nil
  }

  ///   The host (name or ip) of the API. Example: 'swagger.io'
  public var host: String {
    get {return _storage._host}
    set {_uniqueStorage()._host = newValue}
  }

  ///   The base path to the API. Example: '/api'.
  public var basePath: String {
    get {return _storage._basePath}
    set {_uniqueStorage()._basePath = newValue}
  }

  ///   The transfer protocol of the API.
  public var schemes: [String] {
    get {return _storage._schemes}
    set {_uniqueStorage()._schemes = newValue}
  }

  ///   A list of MIME types accepted by the API.
  public var consumes: [String] {
    get {return _storage._consumes}
    set {_uniqueStorage()._consumes = newValue}
  }

  ///   A list of MIME types the API can produce.
  public var produces: [String] {
    get {return _storage._produces}
    set {_uniqueStorage()._produces = newValue}
  }

  public var paths: Openapi_V2_Paths {
    get {return _storage._paths ?? Openapi_V2_Paths()}
    set {_uniqueStorage()._paths = newValue}
  }
  public var hasPaths: Bool {
    return _storage._paths != nil
  }
  public mutating func clearPaths() {
    return _storage._paths = nil
  }

  public var definitions: Openapi_V2_Definitions {
    get {return _storage._definitions ?? Openapi_V2_Definitions()}
    set {_uniqueStorage()._definitions = newValue}
  }
  public var hasDefinitions: Bool {
    return _storage._definitions != nil
  }
  public mutating func clearDefinitions() {
    return _storage._definitions = nil
  }

  public var parameters: Openapi_V2_ParameterDefinitions {
    get {return _storage._parameters ?? Openapi_V2_ParameterDefinitions()}
    set {_uniqueStorage()._parameters = newValue}
  }
  public var hasParameters: Bool {
    return _storage._parameters != nil
  }
  public mutating func clearParameters() {
    return _storage._parameters = nil
  }

  public var responses: Openapi_V2_ResponseDefinitions {
    get {return _storage._responses ?? Openapi_V2_ResponseDefinitions()}
    set {_uniqueStorage()._responses = newValue}
  }
  public var hasResponses: Bool {
    return _storage._responses != nil
  }
  public mutating func clearResponses() {
    return _storage._responses = nil
  }

  public var security: [Openapi_V2_SecurityRequirement] {
    get {return _storage._security}
    set {_uniqueStorage()._security = newValue}
  }

  public var securityDefinitions: Openapi_V2_SecurityDefinitions {
    get {return _storage._securityDefinitions ?? Openapi_V2_SecurityDefinitions()}
    set {_uniqueStorage()._securityDefinitions = newValue}
  }
  public var hasSecurityDefinitions: Bool {
    return _storage._securityDefinitions != nil
  }
  public mutating func clearSecurityDefinitions() {
    return _storage._securityDefinitions = nil
  }

  public var tags: [Openapi_V2_Tag] {
    get {return _storage._tags}
    set {_uniqueStorage()._tags = newValue}
  }

  public var externalDocs: Openapi_V2_ExternalDocs {
    get {return _storage._externalDocs ?? Openapi_V2_ExternalDocs()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  public var hasExternalDocs: Bool {
    return _storage._externalDocs != nil
  }
  public mutating func clearExternalDocs() {
    return _storage._externalDocs = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Document) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Examples: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Examples"}
  public var protoMessageName: String {return "Examples"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Examples) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

///   information about external documentation
public struct Openapi_V2_ExternalDocs: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ExternalDocs"}
  public var protoMessageName: String {return "ExternalDocs"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "description": 1,
    "url": 2,
    "vendorExtension": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "description": 1,
    "url": 2,
    "vendor_extension": 3,
  ]}

  public var description_p: String = ""

  public var url: String = ""

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &description_p)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &url)
    case 3: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if description_p != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: description_p, protoFieldNumber: 1, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
    }
    if url != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: url, protoFieldNumber: 2, protoFieldName: "url", jsonFieldName: "url", swiftFieldName: "url")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 3, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ExternalDocs) -> Bool {
    if description_p != other.description_p {return false}
    if url != other.url {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

///   A deterministic version of a JSON Schema object.
public struct Openapi_V2_FileSchema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_FileSchema"}
  public var protoMessageName: String {return "FileSchema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "format": 1,
    "title": 2,
    "description": 3,
    "default": 4,
    "required": 5,
    "type": 6,
    "readOnly": 7,
    "externalDocs": 8,
    "example": 9,
    "vendorExtension": 10,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "format": 1,
    "title": 2,
    "description": 3,
    "default": 4,
    "required": 5,
    "type": 6,
    "read_only": 7,
    "external_docs": 8,
    "example": 9,
    "vendor_extension": 10,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_FileSchema
    var _format: String = ""
    var _title: String = ""
    var _description_p: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _required: [String] = []
    var _type: String = ""
    var _readOnly: Bool = false
    var _externalDocs: Openapi_V2_ExternalDocs? = nil
    var _example: Openapi_V2_Any? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_title)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 5: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_required)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_readOnly)
      case 8: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ExternalDocs.self, value: &_externalDocs)
      case 9: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_example)
      case 10: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 1, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if _title != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _title, protoFieldNumber: 2, protoFieldName: "title", jsonFieldName: "title", swiftFieldName: "title")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if !_required.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _required, protoFieldNumber: 5, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 6, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _readOnly != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _readOnly, protoFieldNumber: 7, protoFieldName: "read_only", jsonFieldName: "readOnly", swiftFieldName: "readOnly")
      }
      if let v = _externalDocs {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "external_docs", jsonFieldName: "externalDocs", swiftFieldName: "externalDocs")
      }
      if let v = _example {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "example", jsonFieldName: "example", swiftFieldName: "example")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 10, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _format != other._format {return false}
      if _title != other._title {return false}
      if _description_p != other._description_p {return false}
      if _default_p != other._default_p {return false}
      if _required != other._required {return false}
      if _type != other._type {return false}
      if _readOnly != other._readOnly {return false}
      if _externalDocs != other._externalDocs {return false}
      if _example != other._example {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._format = _format
      clone._title = _title
      clone._description_p = _description_p
      clone._default_p = _default_p
      clone._required = _required
      clone._type = _type
      clone._readOnly = _readOnly
      clone._externalDocs = _externalDocs
      clone._example = _example
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var required: [String] {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var readOnly: Bool {
    get {return _storage._readOnly}
    set {_uniqueStorage()._readOnly = newValue}
  }

  public var externalDocs: Openapi_V2_ExternalDocs {
    get {return _storage._externalDocs ?? Openapi_V2_ExternalDocs()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  public var hasExternalDocs: Bool {
    return _storage._externalDocs != nil
  }
  public mutating func clearExternalDocs() {
    return _storage._externalDocs = nil
  }

  public var example: Openapi_V2_Any {
    get {return _storage._example ?? Openapi_V2_Any()}
    set {_uniqueStorage()._example = newValue}
  }
  public var hasExample: Bool {
    return _storage._example != nil
  }
  public mutating func clearExample() {
    return _storage._example = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_FileSchema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_FormDataParameterSubSchema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_FormDataParameterSubSchema"}
  public var protoMessageName: String {return "FormDataParameterSubSchema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "allowEmptyValue": 5,
    "type": 6,
    "format": 7,
    "items": 8,
    "collectionFormat": 9,
    "default": 10,
    "maximum": 11,
    "exclusiveMaximum": 12,
    "minimum": 13,
    "exclusiveMinimum": 14,
    "maxLength": 15,
    "minLength": 16,
    "pattern": 17,
    "maxItems": 18,
    "minItems": 19,
    "uniqueItems": 20,
    "enum": 21,
    "multipleOf": 22,
    "vendorExtension": 23,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "allow_empty_value": 5,
    "type": 6,
    "format": 7,
    "items": 8,
    "collection_format": 9,
    "default": 10,
    "maximum": 11,
    "exclusive_maximum": 12,
    "minimum": 13,
    "exclusive_minimum": 14,
    "max_length": 15,
    "min_length": 16,
    "pattern": 17,
    "max_items": 18,
    "min_items": 19,
    "unique_items": 20,
    "enum": 21,
    "multiple_of": 22,
    "vendor_extension": 23,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_FormDataParameterSubSchema
    var _required: Bool = false
    var _in_p: String = ""
    var _description_p: String = ""
    var _name: String = ""
    var _allowEmptyValue: Bool = false
    var _type: String = ""
    var _format: String = ""
    var _items: Openapi_V2_PrimitivesItems? = nil
    var _collectionFormat: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _enum_p: [Openapi_V2_Any] = []
    var _multipleOf: Double = 0
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_required)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_in_p)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_allowEmptyValue)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 8: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PrimitivesItems.self, value: &_items)
      case 9: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_collectionFormat)
      case 10: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 16: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 18: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 19: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 20: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 21: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 22: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 23: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _required != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _required, protoFieldNumber: 1, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if _in_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _in_p, protoFieldNumber: 2, protoFieldName: "in", jsonFieldName: "in", swiftFieldName: "in_p")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 4, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if _allowEmptyValue != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _allowEmptyValue, protoFieldNumber: 5, protoFieldName: "allow_empty_value", jsonFieldName: "allowEmptyValue", swiftFieldName: "allowEmptyValue")
      }
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 6, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 7, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if _collectionFormat != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _collectionFormat, protoFieldNumber: 9, protoFieldName: "collection_format", jsonFieldName: "collectionFormat", swiftFieldName: "collectionFormat")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 10, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 11, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 12, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 13, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 14, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 15, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 16, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 17, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 18, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 19, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 20, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 21, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 22, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 23, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _required != other._required {return false}
      if _in_p != other._in_p {return false}
      if _description_p != other._description_p {return false}
      if _name != other._name {return false}
      if _allowEmptyValue != other._allowEmptyValue {return false}
      if _type != other._type {return false}
      if _format != other._format {return false}
      if _items != other._items {return false}
      if _collectionFormat != other._collectionFormat {return false}
      if _default_p != other._default_p {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _enum_p != other._enum_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._required = _required
      clone._in_p = _in_p
      clone._description_p = _description_p
      clone._name = _name
      clone._allowEmptyValue = _allowEmptyValue
      clone._type = _type
      clone._format = _format
      clone._items = _items
      clone._collectionFormat = _collectionFormat
      clone._default_p = _default_p
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._enum_p = _enum_p
      clone._multipleOf = _multipleOf
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Determines whether or not this parameter is required or optional.
  public var required: Bool {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  ///   Determines the location of the parameter.
  public var in_p: String {
    get {return _storage._in_p}
    set {_uniqueStorage()._in_p = newValue}
  }

  ///   A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  ///   The name of the parameter.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   allows sending a parameter by name only or with an empty value.
  public var allowEmptyValue: Bool {
    get {return _storage._allowEmptyValue}
    set {_uniqueStorage()._allowEmptyValue = newValue}
  }

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var items: Openapi_V2_PrimitivesItems {
    get {return _storage._items ?? Openapi_V2_PrimitivesItems()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var collectionFormat: String {
    get {return _storage._collectionFormat}
    set {_uniqueStorage()._collectionFormat = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_FormDataParameterSubSchema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Header: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Header"}
  public var protoMessageName: String {return "Header"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "format": 2,
    "items": 3,
    "collectionFormat": 4,
    "default": 5,
    "maximum": 6,
    "exclusiveMaximum": 7,
    "minimum": 8,
    "exclusiveMinimum": 9,
    "maxLength": 10,
    "minLength": 11,
    "pattern": 12,
    "maxItems": 13,
    "minItems": 14,
    "uniqueItems": 15,
    "enum": 16,
    "multipleOf": 17,
    "description": 18,
    "vendorExtension": 19,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "format": 2,
    "items": 3,
    "collection_format": 4,
    "default": 5,
    "maximum": 6,
    "exclusive_maximum": 7,
    "minimum": 8,
    "exclusive_minimum": 9,
    "max_length": 10,
    "min_length": 11,
    "pattern": 12,
    "max_items": 13,
    "min_items": 14,
    "unique_items": 15,
    "enum": 16,
    "multiple_of": 17,
    "description": 18,
    "vendor_extension": 19,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Header
    var _type: String = ""
    var _format: String = ""
    var _items: Openapi_V2_PrimitivesItems? = nil
    var _collectionFormat: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _enum_p: [Openapi_V2_Any] = []
    var _multipleOf: Double = 0
    var _description_p: String = ""
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PrimitivesItems.self, value: &_items)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_collectionFormat)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 8: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 9: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 10: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 16: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 18: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 19: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 2, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if _collectionFormat != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _collectionFormat, protoFieldNumber: 4, protoFieldName: "collection_format", jsonFieldName: "collectionFormat", swiftFieldName: "collectionFormat")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 6, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 7, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 8, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 9, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 10, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 11, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 12, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 13, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 14, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 15, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 16, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 17, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 18, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 19, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if _format != other._format {return false}
      if _items != other._items {return false}
      if _collectionFormat != other._collectionFormat {return false}
      if _default_p != other._default_p {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _enum_p != other._enum_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _description_p != other._description_p {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._type = _type
      clone._format = _format
      clone._items = _items
      clone._collectionFormat = _collectionFormat
      clone._default_p = _default_p
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._enum_p = _enum_p
      clone._multipleOf = _multipleOf
      clone._description_p = _description_p
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var items: Openapi_V2_PrimitivesItems {
    get {return _storage._items ?? Openapi_V2_PrimitivesItems()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var collectionFormat: String {
    get {return _storage._collectionFormat}
    set {_uniqueStorage()._collectionFormat = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Header) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_HeaderParameterSubSchema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_HeaderParameterSubSchema"}
  public var protoMessageName: String {return "HeaderParameterSubSchema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "type": 5,
    "format": 6,
    "items": 7,
    "collectionFormat": 8,
    "default": 9,
    "maximum": 10,
    "exclusiveMaximum": 11,
    "minimum": 12,
    "exclusiveMinimum": 13,
    "maxLength": 14,
    "minLength": 15,
    "pattern": 16,
    "maxItems": 17,
    "minItems": 18,
    "uniqueItems": 19,
    "enum": 20,
    "multipleOf": 21,
    "vendorExtension": 22,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "type": 5,
    "format": 6,
    "items": 7,
    "collection_format": 8,
    "default": 9,
    "maximum": 10,
    "exclusive_maximum": 11,
    "minimum": 12,
    "exclusive_minimum": 13,
    "max_length": 14,
    "min_length": 15,
    "pattern": 16,
    "max_items": 17,
    "min_items": 18,
    "unique_items": 19,
    "enum": 20,
    "multiple_of": 21,
    "vendor_extension": 22,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_HeaderParameterSubSchema
    var _required: Bool = false
    var _in_p: String = ""
    var _description_p: String = ""
    var _name: String = ""
    var _type: String = ""
    var _format: String = ""
    var _items: Openapi_V2_PrimitivesItems? = nil
    var _collectionFormat: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _enum_p: [Openapi_V2_Any] = []
    var _multipleOf: Double = 0
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_required)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_in_p)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 7: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PrimitivesItems.self, value: &_items)
      case 8: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_collectionFormat)
      case 9: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 10: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 16: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 18: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 19: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 20: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 21: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 22: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _required != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _required, protoFieldNumber: 1, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if _in_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _in_p, protoFieldNumber: 2, protoFieldName: "in", jsonFieldName: "in", swiftFieldName: "in_p")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 4, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 5, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 6, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 7, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if _collectionFormat != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _collectionFormat, protoFieldNumber: 8, protoFieldName: "collection_format", jsonFieldName: "collectionFormat", swiftFieldName: "collectionFormat")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 10, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 11, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 12, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 13, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 14, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 15, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 16, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 17, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 18, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 19, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 20, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 21, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 22, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _required != other._required {return false}
      if _in_p != other._in_p {return false}
      if _description_p != other._description_p {return false}
      if _name != other._name {return false}
      if _type != other._type {return false}
      if _format != other._format {return false}
      if _items != other._items {return false}
      if _collectionFormat != other._collectionFormat {return false}
      if _default_p != other._default_p {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _enum_p != other._enum_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._required = _required
      clone._in_p = _in_p
      clone._description_p = _description_p
      clone._name = _name
      clone._type = _type
      clone._format = _format
      clone._items = _items
      clone._collectionFormat = _collectionFormat
      clone._default_p = _default_p
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._enum_p = _enum_p
      clone._multipleOf = _multipleOf
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Determines whether or not this parameter is required or optional.
  public var required: Bool {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  ///   Determines the location of the parameter.
  public var in_p: String {
    get {return _storage._in_p}
    set {_uniqueStorage()._in_p = newValue}
  }

  ///   A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  ///   The name of the parameter.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var items: Openapi_V2_PrimitivesItems {
    get {return _storage._items ?? Openapi_V2_PrimitivesItems()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var collectionFormat: String {
    get {return _storage._collectionFormat}
    set {_uniqueStorage()._collectionFormat = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_HeaderParameterSubSchema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Headers: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Headers"}
  public var protoMessageName: String {return "Headers"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedHeader] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedHeader.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Headers) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

///   General information about the API.
public struct Openapi_V2_Info: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Info"}
  public var protoMessageName: String {return "Info"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "title": 1,
    "version": 2,
    "description": 3,
    "termsOfService": 4,
    "contact": 5,
    "license": 6,
    "vendorExtension": 7,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "title": 1,
    "version": 2,
    "description": 3,
    "terms_of_service": 4,
    "contact": 5,
    "license": 6,
    "vendor_extension": 7,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Info
    var _title: String = ""
    var _version: String = ""
    var _description_p: String = ""
    var _termsOfService: String = ""
    var _contact: Openapi_V2_Contact? = nil
    var _license: Openapi_V2_License? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_title)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_version)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_termsOfService)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Contact.self, value: &_contact)
      case 6: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_License.self, value: &_license)
      case 7: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _title != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _title, protoFieldNumber: 1, protoFieldName: "title", jsonFieldName: "title", swiftFieldName: "title")
      }
      if _version != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _version, protoFieldNumber: 2, protoFieldName: "version", jsonFieldName: "version", swiftFieldName: "version")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if _termsOfService != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _termsOfService, protoFieldNumber: 4, protoFieldName: "terms_of_service", jsonFieldName: "termsOfService", swiftFieldName: "termsOfService")
      }
      if let v = _contact {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "contact", jsonFieldName: "contact", swiftFieldName: "contact")
      }
      if let v = _license {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 6, protoFieldName: "license", jsonFieldName: "license", swiftFieldName: "license")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 7, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _title != other._title {return false}
      if _version != other._version {return false}
      if _description_p != other._description_p {return false}
      if _termsOfService != other._termsOfService {return false}
      if _contact != other._contact {return false}
      if _license != other._license {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._title = _title
      clone._version = _version
      clone._description_p = _description_p
      clone._termsOfService = _termsOfService
      clone._contact = _contact
      clone._license = _license
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   A unique and precise title of the API.
  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  ///   A semantic version number of the API.
  public var version: String {
    get {return _storage._version}
    set {_uniqueStorage()._version = newValue}
  }

  ///   A longer description of the API. Should be different from the title.  GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  ///   The terms of service for the API.
  public var termsOfService: String {
    get {return _storage._termsOfService}
    set {_uniqueStorage()._termsOfService = newValue}
  }

  public var contact: Openapi_V2_Contact {
    get {return _storage._contact ?? Openapi_V2_Contact()}
    set {_uniqueStorage()._contact = newValue}
  }
  public var hasContact: Bool {
    return _storage._contact != nil
  }
  public mutating func clearContact() {
    return _storage._contact = nil
  }

  public var license: Openapi_V2_License {
    get {return _storage._license ?? Openapi_V2_License()}
    set {_uniqueStorage()._license = newValue}
  }
  public var hasLicense: Bool {
    return _storage._license != nil
  }
  public mutating func clearLicense() {
    return _storage._license = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Info) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_ItemsItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ItemsItem"}
  public var protoMessageName: String {return "ItemsItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "schema": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "schema": 1,
  ]}

  public var schema: [Openapi_V2_Schema] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Schema.self, value: &schema)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !schema.isEmpty {
      try visitor.visitRepeatedMessageField(value: schema, protoFieldNumber: 1, protoFieldName: "schema", jsonFieldName: "schema", swiftFieldName: "schema")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ItemsItem) -> Bool {
    if schema != other.schema {return false}
    return true
  }
}

public struct Openapi_V2_JsonReference: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_JsonReference"}
  public var protoMessageName: String {return "JsonReference"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "ref": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "_ref": 1,
  ]}

  public var ref: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &ref)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if ref != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: ref, protoFieldNumber: 1, protoFieldName: "_ref", jsonFieldName: "ref", swiftFieldName: "ref")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_JsonReference) -> Bool {
    if ref != other.ref {return false}
    return true
  }
}

public struct Openapi_V2_License: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_License"}
  public var protoMessageName: String {return "License"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "url": 2,
    "vendorExtension": 3,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "url": 2,
    "vendor_extension": 3,
  ]}

  ///   The name of the license type. It's encouraged to use an OSI compatible license.
  public var name: String = ""

  ///   The URL pointing to the license.
  public var url: String = ""

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &url)
    case 3: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if url != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: url, protoFieldNumber: 2, protoFieldName: "url", jsonFieldName: "url", swiftFieldName: "url")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 3, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_License) -> Bool {
    if name != other.name {return false}
    if url != other.url {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

///   Automatically-generated message used to represent maps of Any as ordered (name,value) pairs.
public struct Openapi_V2_NamedAny: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedAny"}
  public var protoMessageName: String {return "NamedAny"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedAny
    var _name: String = ""
    var _value: Openapi_V2_Any? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_Any {
    get {return _storage._value ?? Openapi_V2_Any()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedAny) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of Header as ordered (name,value) pairs.
public struct Openapi_V2_NamedHeader: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedHeader"}
  public var protoMessageName: String {return "NamedHeader"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedHeader
    var _name: String = ""
    var _value: Openapi_V2_Header? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Header.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_Header {
    get {return _storage._value ?? Openapi_V2_Header()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedHeader) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of Parameter as ordered (name,value) pairs.
public struct Openapi_V2_NamedParameter: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedParameter"}
  public var protoMessageName: String {return "NamedParameter"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedParameter
    var _name: String = ""
    var _value: Openapi_V2_Parameter? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Parameter.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_Parameter {
    get {return _storage._value ?? Openapi_V2_Parameter()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedParameter) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of PathItem as ordered (name,value) pairs.
public struct Openapi_V2_NamedPathItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedPathItem"}
  public var protoMessageName: String {return "NamedPathItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedPathItem
    var _name: String = ""
    var _value: Openapi_V2_PathItem? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PathItem.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_PathItem {
    get {return _storage._value ?? Openapi_V2_PathItem()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedPathItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of Response as ordered (name,value) pairs.
public struct Openapi_V2_NamedResponse: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedResponse"}
  public var protoMessageName: String {return "NamedResponse"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedResponse
    var _name: String = ""
    var _value: Openapi_V2_Response? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Response.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_Response {
    get {return _storage._value ?? Openapi_V2_Response()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedResponse) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of ResponseValue as ordered (name,value) pairs.
public struct Openapi_V2_NamedResponseValue: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedResponseValue"}
  public var protoMessageName: String {return "NamedResponseValue"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedResponseValue
    var _name: String = ""
    var _value: Openapi_V2_ResponseValue? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ResponseValue.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_ResponseValue {
    get {return _storage._value ?? Openapi_V2_ResponseValue()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedResponseValue) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of Schema as ordered (name,value) pairs.
public struct Openapi_V2_NamedSchema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedSchema"}
  public var protoMessageName: String {return "NamedSchema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedSchema
    var _name: String = ""
    var _value: Openapi_V2_Schema? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Schema.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_Schema {
    get {return _storage._value ?? Openapi_V2_Schema()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedSchema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of SecurityDefinitionsItem as ordered (name,value) pairs.
public struct Openapi_V2_NamedSecurityDefinitionsItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedSecurityDefinitionsItem"}
  public var protoMessageName: String {return "NamedSecurityDefinitionsItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedSecurityDefinitionsItem
    var _name: String = ""
    var _value: Openapi_V2_SecurityDefinitionsItem? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_SecurityDefinitionsItem.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_SecurityDefinitionsItem {
    get {return _storage._value ?? Openapi_V2_SecurityDefinitionsItem()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedSecurityDefinitionsItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Automatically-generated message used to represent maps of string as ordered (name,value) pairs.
public struct Openapi_V2_NamedString: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedString"}
  public var protoMessageName: String {return "NamedString"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  ///   Map key
  public var name: String = ""

  ///   Mapped value
  public var value: String = ""

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &value)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if value != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: value, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedString) -> Bool {
    if name != other.name {return false}
    if value != other.value {return false}
    return true
  }
}

///   Automatically-generated message used to represent maps of StringArray as ordered (name,value) pairs.
public struct Openapi_V2_NamedStringArray: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NamedStringArray"}
  public var protoMessageName: String {return "NamedStringArray"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "value": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NamedStringArray
    var _name: String = ""
    var _value: Openapi_V2_StringArray? = nil

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_StringArray.self, value: &_value)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if let v = _value {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _value != other._value {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._value = _value
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Map key
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   Mapped value
  public var value: Openapi_V2_StringArray {
    get {return _storage._value ?? Openapi_V2_StringArray()}
    set {_uniqueStorage()._value = newValue}
  }
  public var hasValue: Bool {
    return _storage._value != nil
  }
  public mutating func clearValue() {
    return _storage._value = nil
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NamedStringArray) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_NonBodyParameter: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_NonBodyParameter"}
  public var protoMessageName: String {return "NonBodyParameter"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "headerParameterSubSchema": 1,
    "formDataParameterSubSchema": 2,
    "queryParameterSubSchema": 3,
    "pathParameterSubSchema": 4,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "header_parameter_sub_schema": 1,
    "form_data_parameter_sub_schema": 2,
    "query_parameter_sub_schema": 3,
    "path_parameter_sub_schema": 4,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_NonBodyParameter
    var _oneof = Openapi_V2_NonBodyParameter.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2, 3, 4:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 5)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case headerParameterSubSchema(Openapi_V2_HeaderParameterSubSchema)
    case formDataParameterSubSchema(Openapi_V2_FormDataParameterSubSchema)
    case queryParameterSubSchema(Openapi_V2_QueryParameterSubSchema)
    case pathParameterSubSchema(Openapi_V2_PathParameterSubSchema)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_HeaderParameterSubSchema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_HeaderParameterSubSchema.self, value: &value)
        if let value = value, handled {
          self = .headerParameterSubSchema(value)
        }
      case 2:
        var value: Openapi_V2_FormDataParameterSubSchema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_FormDataParameterSubSchema.self, value: &value)
        if let value = value, handled {
          self = .formDataParameterSubSchema(value)
        }
      case 3:
        var value: Openapi_V2_QueryParameterSubSchema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_QueryParameterSubSchema.self, value: &value)
        if let value = value, handled {
          self = .queryParameterSubSchema(value)
        }
      case 4:
        var value: Openapi_V2_PathParameterSubSchema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PathParameterSubSchema.self, value: &value)
        if let value = value, handled {
          self = .pathParameterSubSchema(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .headerParameterSubSchema(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "header_parameter_sub_schema", jsonFieldName: "headerParameterSubSchema", swiftFieldName: "headerParameterSubSchema")
        }
      case .formDataParameterSubSchema(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "form_data_parameter_sub_schema", jsonFieldName: "formDataParameterSubSchema", swiftFieldName: "formDataParameterSubSchema")
        }
      case .queryParameterSubSchema(let v):
        if start <= 3 && 3 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "query_parameter_sub_schema", jsonFieldName: "queryParameterSubSchema", swiftFieldName: "queryParameterSubSchema")
        }
      case .pathParameterSubSchema(let v):
        if start <= 4 && 4 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "path_parameter_sub_schema", jsonFieldName: "pathParameterSubSchema", swiftFieldName: "pathParameterSubSchema")
        }
      case .None:
        break
      }
    }
  }

  public var headerParameterSubSchema: Openapi_V2_HeaderParameterSubSchema {
    get {
      if case .headerParameterSubSchema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_HeaderParameterSubSchema()
    }
    set {
      _uniqueStorage()._oneof = .headerParameterSubSchema(newValue)
    }
  }

  public var formDataParameterSubSchema: Openapi_V2_FormDataParameterSubSchema {
    get {
      if case .formDataParameterSubSchema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_FormDataParameterSubSchema()
    }
    set {
      _uniqueStorage()._oneof = .formDataParameterSubSchema(newValue)
    }
  }

  public var queryParameterSubSchema: Openapi_V2_QueryParameterSubSchema {
    get {
      if case .queryParameterSubSchema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_QueryParameterSubSchema()
    }
    set {
      _uniqueStorage()._oneof = .queryParameterSubSchema(newValue)
    }
  }

  public var pathParameterSubSchema: Openapi_V2_PathParameterSubSchema {
    get {
      if case .pathParameterSubSchema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_PathParameterSubSchema()
    }
    set {
      _uniqueStorage()._oneof = .pathParameterSubSchema(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_NonBodyParameter) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Oauth2AccessCodeSecurity: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Oauth2AccessCodeSecurity"}
  public var protoMessageName: String {return "Oauth2AccessCodeSecurity"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "authorizationUrl": 4,
    "tokenUrl": 5,
    "description": 6,
    "vendorExtension": 7,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "authorization_url": 4,
    "token_url": 5,
    "description": 6,
    "vendor_extension": 7,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Oauth2AccessCodeSecurity
    var _type: String = ""
    var _flow: String = ""
    var _scopes: Openapi_V2_Oauth2Scopes? = nil
    var _authorizationURL: String = ""
    var _tokenURL: String = ""
    var _description_p: String = ""
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_flow)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2Scopes.self, value: &_scopes)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_authorizationURL)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_tokenURL)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 7: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _flow != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _flow, protoFieldNumber: 2, protoFieldName: "flow", jsonFieldName: "flow", swiftFieldName: "flow")
      }
      if let v = _scopes {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "scopes", jsonFieldName: "scopes", swiftFieldName: "scopes")
      }
      if _authorizationURL != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _authorizationURL, protoFieldNumber: 4, protoFieldName: "authorization_url", jsonFieldName: "authorizationUrl", swiftFieldName: "authorizationURL")
      }
      if _tokenURL != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _tokenURL, protoFieldNumber: 5, protoFieldName: "token_url", jsonFieldName: "tokenUrl", swiftFieldName: "tokenURL")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 6, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 7, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if _flow != other._flow {return false}
      if _scopes != other._scopes {return false}
      if _authorizationURL != other._authorizationURL {return false}
      if _tokenURL != other._tokenURL {return false}
      if _description_p != other._description_p {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._type = _type
      clone._flow = _flow
      clone._scopes = _scopes
      clone._authorizationURL = _authorizationURL
      clone._tokenURL = _tokenURL
      clone._description_p = _description_p
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var flow: String {
    get {return _storage._flow}
    set {_uniqueStorage()._flow = newValue}
  }

  public var scopes: Openapi_V2_Oauth2Scopes {
    get {return _storage._scopes ?? Openapi_V2_Oauth2Scopes()}
    set {_uniqueStorage()._scopes = newValue}
  }
  public var hasScopes: Bool {
    return _storage._scopes != nil
  }
  public mutating func clearScopes() {
    return _storage._scopes = nil
  }

  public var authorizationURL: String {
    get {return _storage._authorizationURL}
    set {_uniqueStorage()._authorizationURL = newValue}
  }

  public var tokenURL: String {
    get {return _storage._tokenURL}
    set {_uniqueStorage()._tokenURL = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Oauth2AccessCodeSecurity) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Oauth2ApplicationSecurity: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Oauth2ApplicationSecurity"}
  public var protoMessageName: String {return "Oauth2ApplicationSecurity"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "tokenUrl": 4,
    "description": 5,
    "vendorExtension": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "token_url": 4,
    "description": 5,
    "vendor_extension": 6,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Oauth2ApplicationSecurity
    var _type: String = ""
    var _flow: String = ""
    var _scopes: Openapi_V2_Oauth2Scopes? = nil
    var _tokenURL: String = ""
    var _description_p: String = ""
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_flow)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2Scopes.self, value: &_scopes)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_tokenURL)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _flow != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _flow, protoFieldNumber: 2, protoFieldName: "flow", jsonFieldName: "flow", swiftFieldName: "flow")
      }
      if let v = _scopes {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "scopes", jsonFieldName: "scopes", swiftFieldName: "scopes")
      }
      if _tokenURL != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _tokenURL, protoFieldNumber: 4, protoFieldName: "token_url", jsonFieldName: "tokenUrl", swiftFieldName: "tokenURL")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 5, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 6, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if _flow != other._flow {return false}
      if _scopes != other._scopes {return false}
      if _tokenURL != other._tokenURL {return false}
      if _description_p != other._description_p {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._type = _type
      clone._flow = _flow
      clone._scopes = _scopes
      clone._tokenURL = _tokenURL
      clone._description_p = _description_p
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var flow: String {
    get {return _storage._flow}
    set {_uniqueStorage()._flow = newValue}
  }

  public var scopes: Openapi_V2_Oauth2Scopes {
    get {return _storage._scopes ?? Openapi_V2_Oauth2Scopes()}
    set {_uniqueStorage()._scopes = newValue}
  }
  public var hasScopes: Bool {
    return _storage._scopes != nil
  }
  public mutating func clearScopes() {
    return _storage._scopes = nil
  }

  public var tokenURL: String {
    get {return _storage._tokenURL}
    set {_uniqueStorage()._tokenURL = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Oauth2ApplicationSecurity) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Oauth2ImplicitSecurity: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Oauth2ImplicitSecurity"}
  public var protoMessageName: String {return "Oauth2ImplicitSecurity"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "authorizationUrl": 4,
    "description": 5,
    "vendorExtension": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "authorization_url": 4,
    "description": 5,
    "vendor_extension": 6,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Oauth2ImplicitSecurity
    var _type: String = ""
    var _flow: String = ""
    var _scopes: Openapi_V2_Oauth2Scopes? = nil
    var _authorizationURL: String = ""
    var _description_p: String = ""
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_flow)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2Scopes.self, value: &_scopes)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_authorizationURL)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _flow != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _flow, protoFieldNumber: 2, protoFieldName: "flow", jsonFieldName: "flow", swiftFieldName: "flow")
      }
      if let v = _scopes {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "scopes", jsonFieldName: "scopes", swiftFieldName: "scopes")
      }
      if _authorizationURL != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _authorizationURL, protoFieldNumber: 4, protoFieldName: "authorization_url", jsonFieldName: "authorizationUrl", swiftFieldName: "authorizationURL")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 5, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 6, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if _flow != other._flow {return false}
      if _scopes != other._scopes {return false}
      if _authorizationURL != other._authorizationURL {return false}
      if _description_p != other._description_p {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._type = _type
      clone._flow = _flow
      clone._scopes = _scopes
      clone._authorizationURL = _authorizationURL
      clone._description_p = _description_p
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var flow: String {
    get {return _storage._flow}
    set {_uniqueStorage()._flow = newValue}
  }

  public var scopes: Openapi_V2_Oauth2Scopes {
    get {return _storage._scopes ?? Openapi_V2_Oauth2Scopes()}
    set {_uniqueStorage()._scopes = newValue}
  }
  public var hasScopes: Bool {
    return _storage._scopes != nil
  }
  public mutating func clearScopes() {
    return _storage._scopes = nil
  }

  public var authorizationURL: String {
    get {return _storage._authorizationURL}
    set {_uniqueStorage()._authorizationURL = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Oauth2ImplicitSecurity) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Oauth2PasswordSecurity: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Oauth2PasswordSecurity"}
  public var protoMessageName: String {return "Oauth2PasswordSecurity"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "tokenUrl": 4,
    "description": 5,
    "vendorExtension": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "flow": 2,
    "scopes": 3,
    "token_url": 4,
    "description": 5,
    "vendor_extension": 6,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Oauth2PasswordSecurity
    var _type: String = ""
    var _flow: String = ""
    var _scopes: Openapi_V2_Oauth2Scopes? = nil
    var _tokenURL: String = ""
    var _description_p: String = ""
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_flow)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2Scopes.self, value: &_scopes)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_tokenURL)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _flow != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _flow, protoFieldNumber: 2, protoFieldName: "flow", jsonFieldName: "flow", swiftFieldName: "flow")
      }
      if let v = _scopes {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "scopes", jsonFieldName: "scopes", swiftFieldName: "scopes")
      }
      if _tokenURL != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _tokenURL, protoFieldNumber: 4, protoFieldName: "token_url", jsonFieldName: "tokenUrl", swiftFieldName: "tokenURL")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 5, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 6, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if _flow != other._flow {return false}
      if _scopes != other._scopes {return false}
      if _tokenURL != other._tokenURL {return false}
      if _description_p != other._description_p {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._type = _type
      clone._flow = _flow
      clone._scopes = _scopes
      clone._tokenURL = _tokenURL
      clone._description_p = _description_p
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var flow: String {
    get {return _storage._flow}
    set {_uniqueStorage()._flow = newValue}
  }

  public var scopes: Openapi_V2_Oauth2Scopes {
    get {return _storage._scopes ?? Openapi_V2_Oauth2Scopes()}
    set {_uniqueStorage()._scopes = newValue}
  }
  public var hasScopes: Bool {
    return _storage._scopes != nil
  }
  public mutating func clearScopes() {
    return _storage._scopes = nil
  }

  public var tokenURL: String {
    get {return _storage._tokenURL}
    set {_uniqueStorage()._tokenURL = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Oauth2PasswordSecurity) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Oauth2Scopes: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Oauth2Scopes"}
  public var protoMessageName: String {return "Oauth2Scopes"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedString] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedString.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Oauth2Scopes) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_Operation: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Operation"}
  public var protoMessageName: String {return "Operation"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "tags": 1,
    "summary": 2,
    "description": 3,
    "externalDocs": 4,
    "operationId": 5,
    "produces": 6,
    "consumes": 7,
    "parameters": 8,
    "responses": 9,
    "schemes": 10,
    "deprecated": 11,
    "security": 12,
    "vendorExtension": 13,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "tags": 1,
    "summary": 2,
    "description": 3,
    "external_docs": 4,
    "operation_id": 5,
    "produces": 6,
    "consumes": 7,
    "parameters": 8,
    "responses": 9,
    "schemes": 10,
    "deprecated": 11,
    "security": 12,
    "vendor_extension": 13,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Operation
    var _tags: [String] = []
    var _summary: String = ""
    var _description_p: String = ""
    var _externalDocs: Openapi_V2_ExternalDocs? = nil
    var _operationId: String = ""
    var _produces: [String] = []
    var _consumes: [String] = []
    var _parameters: [Openapi_V2_ParametersItem] = []
    var _responses: Openapi_V2_Responses? = nil
    var _schemes: [String] = []
    var _deprecated: Bool = false
    var _security: [Openapi_V2_SecurityRequirement] = []
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_tags)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_summary)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ExternalDocs.self, value: &_externalDocs)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_operationId)
      case 6: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_produces)
      case 7: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_consumes)
      case 8: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_ParametersItem.self, value: &_parameters)
      case 9: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Responses.self, value: &_responses)
      case 10: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_schemes)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_deprecated)
      case 12: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_SecurityRequirement.self, value: &_security)
      case 13: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if !_tags.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _tags, protoFieldNumber: 1, protoFieldName: "tags", jsonFieldName: "tags", swiftFieldName: "tags")
      }
      if _summary != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _summary, protoFieldNumber: 2, protoFieldName: "summary", jsonFieldName: "summary", swiftFieldName: "summary")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if let v = _externalDocs {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "external_docs", jsonFieldName: "externalDocs", swiftFieldName: "externalDocs")
      }
      if _operationId != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _operationId, protoFieldNumber: 5, protoFieldName: "operation_id", jsonFieldName: "operationId", swiftFieldName: "operationId")
      }
      if !_produces.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _produces, protoFieldNumber: 6, protoFieldName: "produces", jsonFieldName: "produces", swiftFieldName: "produces")
      }
      if !_consumes.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _consumes, protoFieldNumber: 7, protoFieldName: "consumes", jsonFieldName: "consumes", swiftFieldName: "consumes")
      }
      if !_parameters.isEmpty {
        try visitor.visitRepeatedMessageField(value: _parameters, protoFieldNumber: 8, protoFieldName: "parameters", jsonFieldName: "parameters", swiftFieldName: "parameters")
      }
      if let v = _responses {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "responses", jsonFieldName: "responses", swiftFieldName: "responses")
      }
      if !_schemes.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _schemes, protoFieldNumber: 10, protoFieldName: "schemes", jsonFieldName: "schemes", swiftFieldName: "schemes")
      }
      if _deprecated != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _deprecated, protoFieldNumber: 11, protoFieldName: "deprecated", jsonFieldName: "deprecated", swiftFieldName: "deprecated")
      }
      if !_security.isEmpty {
        try visitor.visitRepeatedMessageField(value: _security, protoFieldNumber: 12, protoFieldName: "security", jsonFieldName: "security", swiftFieldName: "security")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 13, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _tags != other._tags {return false}
      if _summary != other._summary {return false}
      if _description_p != other._description_p {return false}
      if _externalDocs != other._externalDocs {return false}
      if _operationId != other._operationId {return false}
      if _produces != other._produces {return false}
      if _consumes != other._consumes {return false}
      if _parameters != other._parameters {return false}
      if _responses != other._responses {return false}
      if _schemes != other._schemes {return false}
      if _deprecated != other._deprecated {return false}
      if _security != other._security {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._tags = _tags
      clone._summary = _summary
      clone._description_p = _description_p
      clone._externalDocs = _externalDocs
      clone._operationId = _operationId
      clone._produces = _produces
      clone._consumes = _consumes
      clone._parameters = _parameters
      clone._responses = _responses
      clone._schemes = _schemes
      clone._deprecated = _deprecated
      clone._security = _security
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var tags: [String] {
    get {return _storage._tags}
    set {_uniqueStorage()._tags = newValue}
  }

  ///   A brief summary of the operation.
  public var summary: String {
    get {return _storage._summary}
    set {_uniqueStorage()._summary = newValue}
  }

  ///   A longer description of the operation, GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var externalDocs: Openapi_V2_ExternalDocs {
    get {return _storage._externalDocs ?? Openapi_V2_ExternalDocs()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  public var hasExternalDocs: Bool {
    return _storage._externalDocs != nil
  }
  public mutating func clearExternalDocs() {
    return _storage._externalDocs = nil
  }

  ///   A unique identifier of the operation.
  public var operationId: String {
    get {return _storage._operationId}
    set {_uniqueStorage()._operationId = newValue}
  }

  ///   A list of MIME types the API can produce.
  public var produces: [String] {
    get {return _storage._produces}
    set {_uniqueStorage()._produces = newValue}
  }

  ///   A list of MIME types the API can consume.
  public var consumes: [String] {
    get {return _storage._consumes}
    set {_uniqueStorage()._consumes = newValue}
  }

  ///   The parameters needed to send a valid API call.
  public var parameters: [Openapi_V2_ParametersItem] {
    get {return _storage._parameters}
    set {_uniqueStorage()._parameters = newValue}
  }

  public var responses: Openapi_V2_Responses {
    get {return _storage._responses ?? Openapi_V2_Responses()}
    set {_uniqueStorage()._responses = newValue}
  }
  public var hasResponses: Bool {
    return _storage._responses != nil
  }
  public mutating func clearResponses() {
    return _storage._responses = nil
  }

  ///   The transfer protocol of the API.
  public var schemes: [String] {
    get {return _storage._schemes}
    set {_uniqueStorage()._schemes = newValue}
  }

  public var deprecated: Bool {
    get {return _storage._deprecated}
    set {_uniqueStorage()._deprecated = newValue}
  }

  public var security: [Openapi_V2_SecurityRequirement] {
    get {return _storage._security}
    set {_uniqueStorage()._security = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Operation) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Parameter: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Parameter"}
  public var protoMessageName: String {return "Parameter"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "bodyParameter": 1,
    "nonBodyParameter": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "body_parameter": 1,
    "non_body_parameter": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Parameter
    var _oneof = Openapi_V2_Parameter.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 3)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case bodyParameter(Openapi_V2_BodyParameter)
    case nonBodyParameter(Openapi_V2_NonBodyParameter)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_BodyParameter?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_BodyParameter.self, value: &value)
        if let value = value, handled {
          self = .bodyParameter(value)
        }
      case 2:
        var value: Openapi_V2_NonBodyParameter?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_NonBodyParameter.self, value: &value)
        if let value = value, handled {
          self = .nonBodyParameter(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .bodyParameter(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "body_parameter", jsonFieldName: "bodyParameter", swiftFieldName: "bodyParameter")
        }
      case .nonBodyParameter(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "non_body_parameter", jsonFieldName: "nonBodyParameter", swiftFieldName: "nonBodyParameter")
        }
      case .None:
        break
      }
    }
  }

  public var bodyParameter: Openapi_V2_BodyParameter {
    get {
      if case .bodyParameter(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_BodyParameter()
    }
    set {
      _uniqueStorage()._oneof = .bodyParameter(newValue)
    }
  }

  public var nonBodyParameter: Openapi_V2_NonBodyParameter {
    get {
      if case .nonBodyParameter(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_NonBodyParameter()
    }
    set {
      _uniqueStorage()._oneof = .nonBodyParameter(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Parameter) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   One or more JSON representations for parameters
public struct Openapi_V2_ParameterDefinitions: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ParameterDefinitions"}
  public var protoMessageName: String {return "ParameterDefinitions"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedParameter] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedParameter.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ParameterDefinitions) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_ParametersItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ParametersItem"}
  public var protoMessageName: String {return "ParametersItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "parameter": 1,
    "jsonReference": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "parameter": 1,
    "json_reference": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_ParametersItem
    var _oneof = Openapi_V2_ParametersItem.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 3)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case parameter(Openapi_V2_Parameter)
    case jsonReference(Openapi_V2_JsonReference)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_Parameter?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Parameter.self, value: &value)
        if let value = value, handled {
          self = .parameter(value)
        }
      case 2:
        var value: Openapi_V2_JsonReference?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_JsonReference.self, value: &value)
        if let value = value, handled {
          self = .jsonReference(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .parameter(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "parameter", jsonFieldName: "parameter", swiftFieldName: "parameter")
        }
      case .jsonReference(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "json_reference", jsonFieldName: "jsonReference", swiftFieldName: "jsonReference")
        }
      case .None:
        break
      }
    }
  }

  public var parameter: Openapi_V2_Parameter {
    get {
      if case .parameter(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Parameter()
    }
    set {
      _uniqueStorage()._oneof = .parameter(newValue)
    }
  }

  public var jsonReference: Openapi_V2_JsonReference {
    get {
      if case .jsonReference(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_JsonReference()
    }
    set {
      _uniqueStorage()._oneof = .jsonReference(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ParametersItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_PathItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_PathItem"}
  public var protoMessageName: String {return "PathItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "ref": 1,
    "get": 2,
    "put": 3,
    "post": 4,
    "delete": 5,
    "options": 6,
    "head": 7,
    "patch": 8,
    "parameters": 9,
    "vendorExtension": 10,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "_ref": 1,
    "get": 2,
    "put": 3,
    "post": 4,
    "delete": 5,
    "options": 6,
    "head": 7,
    "patch": 8,
    "parameters": 9,
    "vendor_extension": 10,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_PathItem
    var _ref: String = ""
    var _get: Openapi_V2_Operation? = nil
    var _put: Openapi_V2_Operation? = nil
    var _post: Openapi_V2_Operation? = nil
    var _delete: Openapi_V2_Operation? = nil
    var _options: Openapi_V2_Operation? = nil
    var _head: Openapi_V2_Operation? = nil
    var _patch: Openapi_V2_Operation? = nil
    var _parameters: [Openapi_V2_ParametersItem] = []
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_ref)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_get)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_put)
      case 4: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_post)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_delete)
      case 6: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_options)
      case 7: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_head)
      case 8: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Operation.self, value: &_patch)
      case 9: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_ParametersItem.self, value: &_parameters)
      case 10: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _ref != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _ref, protoFieldNumber: 1, protoFieldName: "_ref", jsonFieldName: "ref", swiftFieldName: "ref")
      }
      if let v = _get {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "get", jsonFieldName: "get", swiftFieldName: "get")
      }
      if let v = _put {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "put", jsonFieldName: "put", swiftFieldName: "put")
      }
      if let v = _post {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "post", jsonFieldName: "post", swiftFieldName: "post")
      }
      if let v = _delete {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "delete", jsonFieldName: "delete", swiftFieldName: "delete")
      }
      if let v = _options {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 6, protoFieldName: "options", jsonFieldName: "options", swiftFieldName: "options")
      }
      if let v = _head {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 7, protoFieldName: "head", jsonFieldName: "head", swiftFieldName: "head")
      }
      if let v = _patch {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "patch", jsonFieldName: "patch", swiftFieldName: "patch")
      }
      if !_parameters.isEmpty {
        try visitor.visitRepeatedMessageField(value: _parameters, protoFieldNumber: 9, protoFieldName: "parameters", jsonFieldName: "parameters", swiftFieldName: "parameters")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 10, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _ref != other._ref {return false}
      if _get != other._get {return false}
      if _put != other._put {return false}
      if _post != other._post {return false}
      if _delete != other._delete {return false}
      if _options != other._options {return false}
      if _head != other._head {return false}
      if _patch != other._patch {return false}
      if _parameters != other._parameters {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._ref = _ref
      clone._get = _get
      clone._put = _put
      clone._post = _post
      clone._delete = _delete
      clone._options = _options
      clone._head = _head
      clone._patch = _patch
      clone._parameters = _parameters
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var ref: String {
    get {return _storage._ref}
    set {_uniqueStorage()._ref = newValue}
  }

  public var get: Openapi_V2_Operation {
    get {return _storage._get ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._get = newValue}
  }
  public var hasGet: Bool {
    return _storage._get != nil
  }
  public mutating func clearGet() {
    return _storage._get = nil
  }

  public var put: Openapi_V2_Operation {
    get {return _storage._put ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._put = newValue}
  }
  public var hasPut: Bool {
    return _storage._put != nil
  }
  public mutating func clearPut() {
    return _storage._put = nil
  }

  public var post: Openapi_V2_Operation {
    get {return _storage._post ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._post = newValue}
  }
  public var hasPost: Bool {
    return _storage._post != nil
  }
  public mutating func clearPost() {
    return _storage._post = nil
  }

  public var delete: Openapi_V2_Operation {
    get {return _storage._delete ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._delete = newValue}
  }
  public var hasDelete: Bool {
    return _storage._delete != nil
  }
  public mutating func clearDelete() {
    return _storage._delete = nil
  }

  public var options: Openapi_V2_Operation {
    get {return _storage._options ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._options = newValue}
  }
  public var hasOptions: Bool {
    return _storage._options != nil
  }
  public mutating func clearOptions() {
    return _storage._options = nil
  }

  public var head: Openapi_V2_Operation {
    get {return _storage._head ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._head = newValue}
  }
  public var hasHead: Bool {
    return _storage._head != nil
  }
  public mutating func clearHead() {
    return _storage._head = nil
  }

  public var patch: Openapi_V2_Operation {
    get {return _storage._patch ?? Openapi_V2_Operation()}
    set {_uniqueStorage()._patch = newValue}
  }
  public var hasPatch: Bool {
    return _storage._patch != nil
  }
  public mutating func clearPatch() {
    return _storage._patch = nil
  }

  ///   The parameters needed to send a valid API call.
  public var parameters: [Openapi_V2_ParametersItem] {
    get {return _storage._parameters}
    set {_uniqueStorage()._parameters = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_PathItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_PathParameterSubSchema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_PathParameterSubSchema"}
  public var protoMessageName: String {return "PathParameterSubSchema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "type": 5,
    "format": 6,
    "items": 7,
    "collectionFormat": 8,
    "default": 9,
    "maximum": 10,
    "exclusiveMaximum": 11,
    "minimum": 12,
    "exclusiveMinimum": 13,
    "maxLength": 14,
    "minLength": 15,
    "pattern": 16,
    "maxItems": 17,
    "minItems": 18,
    "uniqueItems": 19,
    "enum": 20,
    "multipleOf": 21,
    "vendorExtension": 22,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "type": 5,
    "format": 6,
    "items": 7,
    "collection_format": 8,
    "default": 9,
    "maximum": 10,
    "exclusive_maximum": 11,
    "minimum": 12,
    "exclusive_minimum": 13,
    "max_length": 14,
    "min_length": 15,
    "pattern": 16,
    "max_items": 17,
    "min_items": 18,
    "unique_items": 19,
    "enum": 20,
    "multiple_of": 21,
    "vendor_extension": 22,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_PathParameterSubSchema
    var _required: Bool = false
    var _in_p: String = ""
    var _description_p: String = ""
    var _name: String = ""
    var _type: String = ""
    var _format: String = ""
    var _items: Openapi_V2_PrimitivesItems? = nil
    var _collectionFormat: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _enum_p: [Openapi_V2_Any] = []
    var _multipleOf: Double = 0
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_required)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_in_p)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 7: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PrimitivesItems.self, value: &_items)
      case 8: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_collectionFormat)
      case 9: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 10: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 16: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 18: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 19: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 20: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 21: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 22: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _required != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _required, protoFieldNumber: 1, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if _in_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _in_p, protoFieldNumber: 2, protoFieldName: "in", jsonFieldName: "in", swiftFieldName: "in_p")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 4, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 5, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 6, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 7, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if _collectionFormat != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _collectionFormat, protoFieldNumber: 8, protoFieldName: "collection_format", jsonFieldName: "collectionFormat", swiftFieldName: "collectionFormat")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 9, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 10, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 11, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 12, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 13, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 14, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 15, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 16, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 17, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 18, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 19, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 20, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 21, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 22, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _required != other._required {return false}
      if _in_p != other._in_p {return false}
      if _description_p != other._description_p {return false}
      if _name != other._name {return false}
      if _type != other._type {return false}
      if _format != other._format {return false}
      if _items != other._items {return false}
      if _collectionFormat != other._collectionFormat {return false}
      if _default_p != other._default_p {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _enum_p != other._enum_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._required = _required
      clone._in_p = _in_p
      clone._description_p = _description_p
      clone._name = _name
      clone._type = _type
      clone._format = _format
      clone._items = _items
      clone._collectionFormat = _collectionFormat
      clone._default_p = _default_p
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._enum_p = _enum_p
      clone._multipleOf = _multipleOf
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Determines whether or not this parameter is required or optional.
  public var required: Bool {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  ///   Determines the location of the parameter.
  public var in_p: String {
    get {return _storage._in_p}
    set {_uniqueStorage()._in_p = newValue}
  }

  ///   A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  ///   The name of the parameter.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var items: Openapi_V2_PrimitivesItems {
    get {return _storage._items ?? Openapi_V2_PrimitivesItems()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var collectionFormat: String {
    get {return _storage._collectionFormat}
    set {_uniqueStorage()._collectionFormat = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_PathParameterSubSchema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Relative paths to the individual endpoints. They must be relative to the 'basePath'.
public struct Openapi_V2_Paths: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Paths"}
  public var protoMessageName: String {return "Paths"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "vendorExtension": 1,
    "path": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "vendor_extension": 1,
    "path": 2,
  ]}

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public var path: [Openapi_V2_NamedPathItem] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedPathItem.self, value: &path)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 1, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
    if !path.isEmpty {
      try visitor.visitRepeatedMessageField(value: path, protoFieldNumber: 2, protoFieldName: "path", jsonFieldName: "path", swiftFieldName: "path")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Paths) -> Bool {
    if vendorExtension != other.vendorExtension {return false}
    if path != other.path {return false}
    return true
  }
}

public struct Openapi_V2_PrimitivesItems: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_PrimitivesItems"}
  public var protoMessageName: String {return "PrimitivesItems"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "type": 1,
    "format": 2,
    "items": 3,
    "collectionFormat": 4,
    "default": 5,
    "maximum": 6,
    "exclusiveMaximum": 7,
    "minimum": 8,
    "exclusiveMinimum": 9,
    "maxLength": 10,
    "minLength": 11,
    "pattern": 12,
    "maxItems": 13,
    "minItems": 14,
    "uniqueItems": 15,
    "enum": 16,
    "multipleOf": 17,
    "vendorExtension": 18,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "type": 1,
    "format": 2,
    "items": 3,
    "collection_format": 4,
    "default": 5,
    "maximum": 6,
    "exclusive_maximum": 7,
    "minimum": 8,
    "exclusive_minimum": 9,
    "max_length": 10,
    "min_length": 11,
    "pattern": 12,
    "max_items": 13,
    "min_items": 14,
    "unique_items": 15,
    "enum": 16,
    "multiple_of": 17,
    "vendor_extension": 18,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_PrimitivesItems
    var _type: String = ""
    var _format: String = ""
    var _items: Openapi_V2_PrimitivesItems? = nil
    var _collectionFormat: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _enum_p: [Openapi_V2_Any] = []
    var _multipleOf: Double = 0
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PrimitivesItems.self, value: &_items)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_collectionFormat)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 8: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 9: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 10: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 16: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 18: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 1, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 2, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if _collectionFormat != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _collectionFormat, protoFieldNumber: 4, protoFieldName: "collection_format", jsonFieldName: "collectionFormat", swiftFieldName: "collectionFormat")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 6, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 7, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 8, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 9, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 10, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 11, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 12, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 13, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 14, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 15, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 16, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 17, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 18, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _type != other._type {return false}
      if _format != other._format {return false}
      if _items != other._items {return false}
      if _collectionFormat != other._collectionFormat {return false}
      if _default_p != other._default_p {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _enum_p != other._enum_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._type = _type
      clone._format = _format
      clone._items = _items
      clone._collectionFormat = _collectionFormat
      clone._default_p = _default_p
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._enum_p = _enum_p
      clone._multipleOf = _multipleOf
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var items: Openapi_V2_PrimitivesItems {
    get {return _storage._items ?? Openapi_V2_PrimitivesItems()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var collectionFormat: String {
    get {return _storage._collectionFormat}
    set {_uniqueStorage()._collectionFormat = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_PrimitivesItems) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Properties: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Properties"}
  public var protoMessageName: String {return "Properties"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedSchema] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedSchema.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Properties) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_QueryParameterSubSchema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_QueryParameterSubSchema"}
  public var protoMessageName: String {return "QueryParameterSubSchema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "allowEmptyValue": 5,
    "type": 6,
    "format": 7,
    "items": 8,
    "collectionFormat": 9,
    "default": 10,
    "maximum": 11,
    "exclusiveMaximum": 12,
    "minimum": 13,
    "exclusiveMinimum": 14,
    "maxLength": 15,
    "minLength": 16,
    "pattern": 17,
    "maxItems": 18,
    "minItems": 19,
    "uniqueItems": 20,
    "enum": 21,
    "multipleOf": 22,
    "vendorExtension": 23,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "required": 1,
    "in": 2,
    "description": 3,
    "name": 4,
    "allow_empty_value": 5,
    "type": 6,
    "format": 7,
    "items": 8,
    "collection_format": 9,
    "default": 10,
    "maximum": 11,
    "exclusive_maximum": 12,
    "minimum": 13,
    "exclusive_minimum": 14,
    "max_length": 15,
    "min_length": 16,
    "pattern": 17,
    "max_items": 18,
    "min_items": 19,
    "unique_items": 20,
    "enum": 21,
    "multiple_of": 22,
    "vendor_extension": 23,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_QueryParameterSubSchema
    var _required: Bool = false
    var _in_p: String = ""
    var _description_p: String = ""
    var _name: String = ""
    var _allowEmptyValue: Bool = false
    var _type: String = ""
    var _format: String = ""
    var _items: Openapi_V2_PrimitivesItems? = nil
    var _collectionFormat: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _enum_p: [Openapi_V2_Any] = []
    var _multipleOf: Double = 0
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_required)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_in_p)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 5: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_allowEmptyValue)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_type)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 8: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_PrimitivesItems.self, value: &_items)
      case 9: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_collectionFormat)
      case 10: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 16: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 18: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 19: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 20: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 21: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 22: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 23: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _required != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _required, protoFieldNumber: 1, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if _in_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _in_p, protoFieldNumber: 2, protoFieldName: "in", jsonFieldName: "in", swiftFieldName: "in_p")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 3, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 4, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if _allowEmptyValue != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _allowEmptyValue, protoFieldNumber: 5, protoFieldName: "allow_empty_value", jsonFieldName: "allowEmptyValue", swiftFieldName: "allowEmptyValue")
      }
      if _type != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _type, protoFieldNumber: 6, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 7, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 8, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if _collectionFormat != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _collectionFormat, protoFieldNumber: 9, protoFieldName: "collection_format", jsonFieldName: "collectionFormat", swiftFieldName: "collectionFormat")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 10, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 11, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 12, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 13, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 14, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 15, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 16, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 17, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 18, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 19, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 20, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 21, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 22, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 23, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _required != other._required {return false}
      if _in_p != other._in_p {return false}
      if _description_p != other._description_p {return false}
      if _name != other._name {return false}
      if _allowEmptyValue != other._allowEmptyValue {return false}
      if _type != other._type {return false}
      if _format != other._format {return false}
      if _items != other._items {return false}
      if _collectionFormat != other._collectionFormat {return false}
      if _default_p != other._default_p {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _enum_p != other._enum_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._required = _required
      clone._in_p = _in_p
      clone._description_p = _description_p
      clone._name = _name
      clone._allowEmptyValue = _allowEmptyValue
      clone._type = _type
      clone._format = _format
      clone._items = _items
      clone._collectionFormat = _collectionFormat
      clone._default_p = _default_p
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._enum_p = _enum_p
      clone._multipleOf = _multipleOf
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  ///   Determines whether or not this parameter is required or optional.
  public var required: Bool {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  ///   Determines the location of the parameter.
  public var in_p: String {
    get {return _storage._in_p}
    set {_uniqueStorage()._in_p = newValue}
  }

  ///   A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.
  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  ///   The name of the parameter.
  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  ///   allows sending a parameter by name only or with an empty value.
  public var allowEmptyValue: Bool {
    get {return _storage._allowEmptyValue}
    set {_uniqueStorage()._allowEmptyValue = newValue}
  }

  public var type: String {
    get {return _storage._type}
    set {_uniqueStorage()._type = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var items: Openapi_V2_PrimitivesItems {
    get {return _storage._items ?? Openapi_V2_PrimitivesItems()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var collectionFormat: String {
    get {return _storage._collectionFormat}
    set {_uniqueStorage()._collectionFormat = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_QueryParameterSubSchema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_Response: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Response"}
  public var protoMessageName: String {return "Response"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "description": 1,
    "schema": 2,
    "headers": 3,
    "examples": 4,
    "vendorExtension": 5,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "description": 1,
    "schema": 2,
    "headers": 3,
    "examples": 4,
    "vendor_extension": 5,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Response
    var _description_p: String = ""
    var _schema: Openapi_V2_SchemaItem? = nil
    var _headers: Openapi_V2_Headers? = nil
    var _examples: Openapi_V2_Examples? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 2: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_SchemaItem.self, value: &_schema)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Headers.self, value: &_headers)
      case 4: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Examples.self, value: &_examples)
      case 5: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 1, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if let v = _schema {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "schema", jsonFieldName: "schema", swiftFieldName: "schema")
      }
      if let v = _headers {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "headers", jsonFieldName: "headers", swiftFieldName: "headers")
      }
      if let v = _examples {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "examples", jsonFieldName: "examples", swiftFieldName: "examples")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 5, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _description_p != other._description_p {return false}
      if _schema != other._schema {return false}
      if _headers != other._headers {return false}
      if _examples != other._examples {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._description_p = _description_p
      clone._schema = _schema
      clone._headers = _headers
      clone._examples = _examples
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var schema: Openapi_V2_SchemaItem {
    get {return _storage._schema ?? Openapi_V2_SchemaItem()}
    set {_uniqueStorage()._schema = newValue}
  }
  public var hasSchema: Bool {
    return _storage._schema != nil
  }
  public mutating func clearSchema() {
    return _storage._schema = nil
  }

  public var headers: Openapi_V2_Headers {
    get {return _storage._headers ?? Openapi_V2_Headers()}
    set {_uniqueStorage()._headers = newValue}
  }
  public var hasHeaders: Bool {
    return _storage._headers != nil
  }
  public mutating func clearHeaders() {
    return _storage._headers = nil
  }

  public var examples: Openapi_V2_Examples {
    get {return _storage._examples ?? Openapi_V2_Examples()}
    set {_uniqueStorage()._examples = newValue}
  }
  public var hasExamples: Bool {
    return _storage._examples != nil
  }
  public mutating func clearExamples() {
    return _storage._examples = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Response) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   One or more JSON representations for parameters
public struct Openapi_V2_ResponseDefinitions: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ResponseDefinitions"}
  public var protoMessageName: String {return "ResponseDefinitions"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedResponse] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedResponse.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ResponseDefinitions) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_ResponseValue: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_ResponseValue"}
  public var protoMessageName: String {return "ResponseValue"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "response": 1,
    "jsonReference": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "response": 1,
    "json_reference": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_ResponseValue
    var _oneof = Openapi_V2_ResponseValue.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 3)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case response(Openapi_V2_Response)
    case jsonReference(Openapi_V2_JsonReference)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_Response?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Response.self, value: &value)
        if let value = value, handled {
          self = .response(value)
        }
      case 2:
        var value: Openapi_V2_JsonReference?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_JsonReference.self, value: &value)
        if let value = value, handled {
          self = .jsonReference(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .response(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "response", jsonFieldName: "response", swiftFieldName: "response")
        }
      case .jsonReference(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "json_reference", jsonFieldName: "jsonReference", swiftFieldName: "jsonReference")
        }
      case .None:
        break
      }
    }
  }

  public var response: Openapi_V2_Response {
    get {
      if case .response(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Response()
    }
    set {
      _uniqueStorage()._oneof = .response(newValue)
    }
  }

  public var jsonReference: Openapi_V2_JsonReference {
    get {
      if case .jsonReference(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_JsonReference()
    }
    set {
      _uniqueStorage()._oneof = .jsonReference(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_ResponseValue) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

///   Response objects names can either be any valid HTTP status code or 'default'.
public struct Openapi_V2_Responses: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Responses"}
  public var protoMessageName: String {return "Responses"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "responseCode": 1,
    "vendorExtension": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "response_code": 1,
    "vendor_extension": 2,
  ]}

  public var responseCode: [Openapi_V2_NamedResponseValue] = []

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedResponseValue.self, value: &responseCode)
    case 2: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !responseCode.isEmpty {
      try visitor.visitRepeatedMessageField(value: responseCode, protoFieldNumber: 1, protoFieldName: "response_code", jsonFieldName: "responseCode", swiftFieldName: "responseCode")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 2, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Responses) -> Bool {
    if responseCode != other.responseCode {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

///   A deterministic version of a JSON Schema object.
public struct Openapi_V2_Schema: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Schema"}
  public var protoMessageName: String {return "Schema"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "ref": 1,
    "format": 2,
    "title": 3,
    "description": 4,
    "default": 5,
    "multipleOf": 6,
    "maximum": 7,
    "exclusiveMaximum": 8,
    "minimum": 9,
    "exclusiveMinimum": 10,
    "maxLength": 11,
    "minLength": 12,
    "pattern": 13,
    "maxItems": 14,
    "minItems": 15,
    "uniqueItems": 16,
    "maxProperties": 17,
    "minProperties": 18,
    "required": 19,
    "enum": 20,
    "additionalProperties": 21,
    "type": 22,
    "items": 23,
    "allOf": 24,
    "properties": 25,
    "discriminator": 26,
    "readOnly": 27,
    "xml": 28,
    "externalDocs": 29,
    "example": 30,
    "vendorExtension": 31,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "_ref": 1,
    "format": 2,
    "title": 3,
    "description": 4,
    "default": 5,
    "multiple_of": 6,
    "maximum": 7,
    "exclusive_maximum": 8,
    "minimum": 9,
    "exclusive_minimum": 10,
    "max_length": 11,
    "min_length": 12,
    "pattern": 13,
    "max_items": 14,
    "min_items": 15,
    "unique_items": 16,
    "max_properties": 17,
    "min_properties": 18,
    "required": 19,
    "enum": 20,
    "additional_properties": 21,
    "type": 22,
    "items": 23,
    "all_of": 24,
    "properties": 25,
    "discriminator": 26,
    "read_only": 27,
    "xml": 28,
    "external_docs": 29,
    "example": 30,
    "vendor_extension": 31,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Schema
    var _ref: String = ""
    var _format: String = ""
    var _title: String = ""
    var _description_p: String = ""
    var _default_p: Openapi_V2_Any? = nil
    var _multipleOf: Double = 0
    var _maximum: Double = 0
    var _exclusiveMaximum: Bool = false
    var _minimum: Double = 0
    var _exclusiveMinimum: Bool = false
    var _maxLength: Int64 = 0
    var _minLength: Int64 = 0
    var _pattern: String = ""
    var _maxItems: Int64 = 0
    var _minItems: Int64 = 0
    var _uniqueItems: Bool = false
    var _maxProperties: Int64 = 0
    var _minProperties: Int64 = 0
    var _required: [String] = []
    var _enum_p: [Openapi_V2_Any] = []
    var _additionalProperties: Openapi_V2_AdditionalPropertiesItem? = nil
    var _type: Openapi_V2_TypeItem? = nil
    var _items: Openapi_V2_ItemsItem? = nil
    var _allOf: [Openapi_V2_Schema] = []
    var _properties: Openapi_V2_Properties? = nil
    var _discriminator: String = ""
    var _readOnly: Bool = false
    var _xml: Openapi_V2_Xml? = nil
    var _externalDocs: Openapi_V2_ExternalDocs? = nil
    var _example: Openapi_V2_Any? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_ref)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_format)
      case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_title)
      case 4: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 5: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_default_p)
      case 6: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_multipleOf)
      case 7: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_maximum)
      case 8: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMaximum)
      case 9: handled = try setter.decodeSingularField(fieldType: ProtobufDouble.self, value: &_minimum)
      case 10: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_exclusiveMinimum)
      case 11: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxLength)
      case 12: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minLength)
      case 13: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_pattern)
      case 14: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxItems)
      case 15: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minItems)
      case 16: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_uniqueItems)
      case 17: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_maxProperties)
      case 18: handled = try setter.decodeSingularField(fieldType: ProtobufInt64.self, value: &_minProperties)
      case 19: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &_required)
      case 20: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Any.self, value: &_enum_p)
      case 21: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_AdditionalPropertiesItem.self, value: &_additionalProperties)
      case 22: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_TypeItem.self, value: &_type)
      case 23: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ItemsItem.self, value: &_items)
      case 24: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_Schema.self, value: &_allOf)
      case 25: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Properties.self, value: &_properties)
      case 26: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_discriminator)
      case 27: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &_readOnly)
      case 28: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Xml.self, value: &_xml)
      case 29: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ExternalDocs.self, value: &_externalDocs)
      case 30: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Any.self, value: &_example)
      case 31: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _ref != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _ref, protoFieldNumber: 1, protoFieldName: "_ref", jsonFieldName: "ref", swiftFieldName: "ref")
      }
      if _format != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _format, protoFieldNumber: 2, protoFieldName: "format", jsonFieldName: "format", swiftFieldName: "format")
      }
      if _title != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _title, protoFieldNumber: 3, protoFieldName: "title", jsonFieldName: "title", swiftFieldName: "title")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 4, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if let v = _default_p {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "default", jsonFieldName: "default", swiftFieldName: "default_p")
      }
      if _multipleOf != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _multipleOf, protoFieldNumber: 6, protoFieldName: "multiple_of", jsonFieldName: "multipleOf", swiftFieldName: "multipleOf")
      }
      if _maximum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _maximum, protoFieldNumber: 7, protoFieldName: "maximum", jsonFieldName: "maximum", swiftFieldName: "maximum")
      }
      if _exclusiveMaximum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMaximum, protoFieldNumber: 8, protoFieldName: "exclusive_maximum", jsonFieldName: "exclusiveMaximum", swiftFieldName: "exclusiveMaximum")
      }
      if _minimum != 0 {
        try visitor.visitSingularField(fieldType: ProtobufDouble.self, value: _minimum, protoFieldNumber: 9, protoFieldName: "minimum", jsonFieldName: "minimum", swiftFieldName: "minimum")
      }
      if _exclusiveMinimum != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _exclusiveMinimum, protoFieldNumber: 10, protoFieldName: "exclusive_minimum", jsonFieldName: "exclusiveMinimum", swiftFieldName: "exclusiveMinimum")
      }
      if _maxLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxLength, protoFieldNumber: 11, protoFieldName: "max_length", jsonFieldName: "maxLength", swiftFieldName: "maxLength")
      }
      if _minLength != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minLength, protoFieldNumber: 12, protoFieldName: "min_length", jsonFieldName: "minLength", swiftFieldName: "minLength")
      }
      if _pattern != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _pattern, protoFieldNumber: 13, protoFieldName: "pattern", jsonFieldName: "pattern", swiftFieldName: "pattern")
      }
      if _maxItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxItems, protoFieldNumber: 14, protoFieldName: "max_items", jsonFieldName: "maxItems", swiftFieldName: "maxItems")
      }
      if _minItems != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minItems, protoFieldNumber: 15, protoFieldName: "min_items", jsonFieldName: "minItems", swiftFieldName: "minItems")
      }
      if _uniqueItems != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _uniqueItems, protoFieldNumber: 16, protoFieldName: "unique_items", jsonFieldName: "uniqueItems", swiftFieldName: "uniqueItems")
      }
      if _maxProperties != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _maxProperties, protoFieldNumber: 17, protoFieldName: "max_properties", jsonFieldName: "maxProperties", swiftFieldName: "maxProperties")
      }
      if _minProperties != 0 {
        try visitor.visitSingularField(fieldType: ProtobufInt64.self, value: _minProperties, protoFieldNumber: 18, protoFieldName: "min_properties", jsonFieldName: "minProperties", swiftFieldName: "minProperties")
      }
      if !_required.isEmpty {
        try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: _required, protoFieldNumber: 19, protoFieldName: "required", jsonFieldName: "required", swiftFieldName: "required")
      }
      if !_enum_p.isEmpty {
        try visitor.visitRepeatedMessageField(value: _enum_p, protoFieldNumber: 20, protoFieldName: "enum", jsonFieldName: "enum", swiftFieldName: "enum_p")
      }
      if let v = _additionalProperties {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 21, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
      }
      if let v = _type {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 22, protoFieldName: "type", jsonFieldName: "type", swiftFieldName: "type")
      }
      if let v = _items {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 23, protoFieldName: "items", jsonFieldName: "items", swiftFieldName: "items")
      }
      if !_allOf.isEmpty {
        try visitor.visitRepeatedMessageField(value: _allOf, protoFieldNumber: 24, protoFieldName: "all_of", jsonFieldName: "allOf", swiftFieldName: "allOf")
      }
      if let v = _properties {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 25, protoFieldName: "properties", jsonFieldName: "properties", swiftFieldName: "properties")
      }
      if _discriminator != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _discriminator, protoFieldNumber: 26, protoFieldName: "discriminator", jsonFieldName: "discriminator", swiftFieldName: "discriminator")
      }
      if _readOnly != false {
        try visitor.visitSingularField(fieldType: ProtobufBool.self, value: _readOnly, protoFieldNumber: 27, protoFieldName: "read_only", jsonFieldName: "readOnly", swiftFieldName: "readOnly")
      }
      if let v = _xml {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 28, protoFieldName: "xml", jsonFieldName: "xml", swiftFieldName: "xml")
      }
      if let v = _externalDocs {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 29, protoFieldName: "external_docs", jsonFieldName: "externalDocs", swiftFieldName: "externalDocs")
      }
      if let v = _example {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 30, protoFieldName: "example", jsonFieldName: "example", swiftFieldName: "example")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 31, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _ref != other._ref {return false}
      if _format != other._format {return false}
      if _title != other._title {return false}
      if _description_p != other._description_p {return false}
      if _default_p != other._default_p {return false}
      if _multipleOf != other._multipleOf {return false}
      if _maximum != other._maximum {return false}
      if _exclusiveMaximum != other._exclusiveMaximum {return false}
      if _minimum != other._minimum {return false}
      if _exclusiveMinimum != other._exclusiveMinimum {return false}
      if _maxLength != other._maxLength {return false}
      if _minLength != other._minLength {return false}
      if _pattern != other._pattern {return false}
      if _maxItems != other._maxItems {return false}
      if _minItems != other._minItems {return false}
      if _uniqueItems != other._uniqueItems {return false}
      if _maxProperties != other._maxProperties {return false}
      if _minProperties != other._minProperties {return false}
      if _required != other._required {return false}
      if _enum_p != other._enum_p {return false}
      if _additionalProperties != other._additionalProperties {return false}
      if _type != other._type {return false}
      if _items != other._items {return false}
      if _allOf != other._allOf {return false}
      if _properties != other._properties {return false}
      if _discriminator != other._discriminator {return false}
      if _readOnly != other._readOnly {return false}
      if _xml != other._xml {return false}
      if _externalDocs != other._externalDocs {return false}
      if _example != other._example {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._ref = _ref
      clone._format = _format
      clone._title = _title
      clone._description_p = _description_p
      clone._default_p = _default_p
      clone._multipleOf = _multipleOf
      clone._maximum = _maximum
      clone._exclusiveMaximum = _exclusiveMaximum
      clone._minimum = _minimum
      clone._exclusiveMinimum = _exclusiveMinimum
      clone._maxLength = _maxLength
      clone._minLength = _minLength
      clone._pattern = _pattern
      clone._maxItems = _maxItems
      clone._minItems = _minItems
      clone._uniqueItems = _uniqueItems
      clone._maxProperties = _maxProperties
      clone._minProperties = _minProperties
      clone._required = _required
      clone._enum_p = _enum_p
      clone._additionalProperties = _additionalProperties
      clone._type = _type
      clone._items = _items
      clone._allOf = _allOf
      clone._properties = _properties
      clone._discriminator = _discriminator
      clone._readOnly = _readOnly
      clone._xml = _xml
      clone._externalDocs = _externalDocs
      clone._example = _example
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var ref: String {
    get {return _storage._ref}
    set {_uniqueStorage()._ref = newValue}
  }

  public var format: String {
    get {return _storage._format}
    set {_uniqueStorage()._format = newValue}
  }

  public var title: String {
    get {return _storage._title}
    set {_uniqueStorage()._title = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var default_p: Openapi_V2_Any {
    get {return _storage._default_p ?? Openapi_V2_Any()}
    set {_uniqueStorage()._default_p = newValue}
  }
  public var hasDefault: Bool {
    return _storage._default_p != nil
  }
  public mutating func clearDefault() {
    return _storage._default_p = nil
  }

  public var multipleOf: Double {
    get {return _storage._multipleOf}
    set {_uniqueStorage()._multipleOf = newValue}
  }

  public var maximum: Double {
    get {return _storage._maximum}
    set {_uniqueStorage()._maximum = newValue}
  }

  public var exclusiveMaximum: Bool {
    get {return _storage._exclusiveMaximum}
    set {_uniqueStorage()._exclusiveMaximum = newValue}
  }

  public var minimum: Double {
    get {return _storage._minimum}
    set {_uniqueStorage()._minimum = newValue}
  }

  public var exclusiveMinimum: Bool {
    get {return _storage._exclusiveMinimum}
    set {_uniqueStorage()._exclusiveMinimum = newValue}
  }

  public var maxLength: Int64 {
    get {return _storage._maxLength}
    set {_uniqueStorage()._maxLength = newValue}
  }

  public var minLength: Int64 {
    get {return _storage._minLength}
    set {_uniqueStorage()._minLength = newValue}
  }

  public var pattern: String {
    get {return _storage._pattern}
    set {_uniqueStorage()._pattern = newValue}
  }

  public var maxItems: Int64 {
    get {return _storage._maxItems}
    set {_uniqueStorage()._maxItems = newValue}
  }

  public var minItems: Int64 {
    get {return _storage._minItems}
    set {_uniqueStorage()._minItems = newValue}
  }

  public var uniqueItems: Bool {
    get {return _storage._uniqueItems}
    set {_uniqueStorage()._uniqueItems = newValue}
  }

  public var maxProperties: Int64 {
    get {return _storage._maxProperties}
    set {_uniqueStorage()._maxProperties = newValue}
  }

  public var minProperties: Int64 {
    get {return _storage._minProperties}
    set {_uniqueStorage()._minProperties = newValue}
  }

  public var required: [String] {
    get {return _storage._required}
    set {_uniqueStorage()._required = newValue}
  }

  public var enum_p: [Openapi_V2_Any] {
    get {return _storage._enum_p}
    set {_uniqueStorage()._enum_p = newValue}
  }

  public var additionalProperties: Openapi_V2_AdditionalPropertiesItem {
    get {return _storage._additionalProperties ?? Openapi_V2_AdditionalPropertiesItem()}
    set {_uniqueStorage()._additionalProperties = newValue}
  }
  public var hasAdditionalProperties: Bool {
    return _storage._additionalProperties != nil
  }
  public mutating func clearAdditionalProperties() {
    return _storage._additionalProperties = nil
  }

  public var type: Openapi_V2_TypeItem {
    get {return _storage._type ?? Openapi_V2_TypeItem()}
    set {_uniqueStorage()._type = newValue}
  }
  public var hasType: Bool {
    return _storage._type != nil
  }
  public mutating func clearType() {
    return _storage._type = nil
  }

  public var items: Openapi_V2_ItemsItem {
    get {return _storage._items ?? Openapi_V2_ItemsItem()}
    set {_uniqueStorage()._items = newValue}
  }
  public var hasItems: Bool {
    return _storage._items != nil
  }
  public mutating func clearItems() {
    return _storage._items = nil
  }

  public var allOf: [Openapi_V2_Schema] {
    get {return _storage._allOf}
    set {_uniqueStorage()._allOf = newValue}
  }

  public var properties: Openapi_V2_Properties {
    get {return _storage._properties ?? Openapi_V2_Properties()}
    set {_uniqueStorage()._properties = newValue}
  }
  public var hasProperties: Bool {
    return _storage._properties != nil
  }
  public mutating func clearProperties() {
    return _storage._properties = nil
  }

  public var discriminator: String {
    get {return _storage._discriminator}
    set {_uniqueStorage()._discriminator = newValue}
  }

  public var readOnly: Bool {
    get {return _storage._readOnly}
    set {_uniqueStorage()._readOnly = newValue}
  }

  public var xml: Openapi_V2_Xml {
    get {return _storage._xml ?? Openapi_V2_Xml()}
    set {_uniqueStorage()._xml = newValue}
  }
  public var hasXml: Bool {
    return _storage._xml != nil
  }
  public mutating func clearXml() {
    return _storage._xml = nil
  }

  public var externalDocs: Openapi_V2_ExternalDocs {
    get {return _storage._externalDocs ?? Openapi_V2_ExternalDocs()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  public var hasExternalDocs: Bool {
    return _storage._externalDocs != nil
  }
  public mutating func clearExternalDocs() {
    return _storage._externalDocs = nil
  }

  public var example: Openapi_V2_Any {
    get {return _storage._example ?? Openapi_V2_Any()}
    set {_uniqueStorage()._example = newValue}
  }
  public var hasExample: Bool {
    return _storage._example != nil
  }
  public mutating func clearExample() {
    return _storage._example = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Schema) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_SchemaItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_SchemaItem"}
  public var protoMessageName: String {return "SchemaItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "schema": 1,
    "fileSchema": 2,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "schema": 1,
    "file_schema": 2,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_SchemaItem
    var _oneof = Openapi_V2_SchemaItem.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 3)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case schema(Openapi_V2_Schema)
    case fileSchema(Openapi_V2_FileSchema)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_Schema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Schema.self, value: &value)
        if let value = value, handled {
          self = .schema(value)
        }
      case 2:
        var value: Openapi_V2_FileSchema?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_FileSchema.self, value: &value)
        if let value = value, handled {
          self = .fileSchema(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .schema(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "schema", jsonFieldName: "schema", swiftFieldName: "schema")
        }
      case .fileSchema(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "file_schema", jsonFieldName: "fileSchema", swiftFieldName: "fileSchema")
        }
      case .None:
        break
      }
    }
  }

  public var schema: Openapi_V2_Schema {
    get {
      if case .schema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Schema()
    }
    set {
      _uniqueStorage()._oneof = .schema(newValue)
    }
  }

  public var fileSchema: Openapi_V2_FileSchema {
    get {
      if case .fileSchema(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_FileSchema()
    }
    set {
      _uniqueStorage()._oneof = .fileSchema(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_SchemaItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_SecurityDefinitions: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_SecurityDefinitions"}
  public var protoMessageName: String {return "SecurityDefinitions"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedSecurityDefinitionsItem] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedSecurityDefinitionsItem.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_SecurityDefinitions) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_SecurityDefinitionsItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_SecurityDefinitionsItem"}
  public var protoMessageName: String {return "SecurityDefinitionsItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "basicAuthenticationSecurity": 1,
    "apiKeySecurity": 2,
    "oauth2ImplicitSecurity": 3,
    "oauth2PasswordSecurity": 4,
    "oauth2ApplicationSecurity": 5,
    "oauth2AccessCodeSecurity": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "basic_authentication_security": 1,
    "api_key_security": 2,
    "oauth2_implicit_security": 3,
    "oauth2_password_security": 4,
    "oauth2_application_security": 5,
    "oauth2_access_code_security": 6,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_SecurityDefinitionsItem
    var _oneof = Openapi_V2_SecurityDefinitionsItem.OneOf_Oneof()

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1, 2, 3, 4, 5, 6:
        handled = try _oneof.decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      try _oneof.traverse(visitor: &visitor, start: 1, end: 7)
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _oneof != other._oneof {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._oneof = _oneof
      return clone
    }
  }

  private var _storage = _StorageClass()

  public enum OneOf_Oneof: ExpressibleByNilLiteral, ProtobufOneofEnum {
    case basicAuthenticationSecurity(Openapi_V2_BasicAuthenticationSecurity)
    case apiKeySecurity(Openapi_V2_ApiKeySecurity)
    case oauth2ImplicitSecurity(Openapi_V2_Oauth2ImplicitSecurity)
    case oauth2PasswordSecurity(Openapi_V2_Oauth2PasswordSecurity)
    case oauth2ApplicationSecurity(Openapi_V2_Oauth2ApplicationSecurity)
    case oauth2AccessCodeSecurity(Openapi_V2_Oauth2AccessCodeSecurity)
    case None

    public init(nilLiteral: ()) {
      self = .None
    }

    public init() {
      self = .None
    }

    public mutating func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      if self != .None && setter.rejectConflictingOneof {
        throw ProtobufDecodingError.duplicatedOneOf
      }
      let handled: Bool
      switch protoFieldNumber {
      case 1:
        var value: Openapi_V2_BasicAuthenticationSecurity?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_BasicAuthenticationSecurity.self, value: &value)
        if let value = value, handled {
          self = .basicAuthenticationSecurity(value)
        }
      case 2:
        var value: Openapi_V2_ApiKeySecurity?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ApiKeySecurity.self, value: &value)
        if let value = value, handled {
          self = .apiKeySecurity(value)
        }
      case 3:
        var value: Openapi_V2_Oauth2ImplicitSecurity?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2ImplicitSecurity.self, value: &value)
        if let value = value, handled {
          self = .oauth2ImplicitSecurity(value)
        }
      case 4:
        var value: Openapi_V2_Oauth2PasswordSecurity?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2PasswordSecurity.self, value: &value)
        if let value = value, handled {
          self = .oauth2PasswordSecurity(value)
        }
      case 5:
        var value: Openapi_V2_Oauth2ApplicationSecurity?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2ApplicationSecurity.self, value: &value)
        if let value = value, handled {
          self = .oauth2ApplicationSecurity(value)
        }
      case 6:
        var value: Openapi_V2_Oauth2AccessCodeSecurity?
        handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_Oauth2AccessCodeSecurity.self, value: &value)
        if let value = value, handled {
          self = .oauth2AccessCodeSecurity(value)
        }
      default:
        handled = false
        self = .None
      }
      return handled
    }

    public func traverse(visitor: inout ProtobufVisitor, start: Int, end: Int) throws {
      switch self {
      case .basicAuthenticationSecurity(let v):
        if start <= 1 && 1 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 1, protoFieldName: "basic_authentication_security", jsonFieldName: "basicAuthenticationSecurity", swiftFieldName: "basicAuthenticationSecurity")
        }
      case .apiKeySecurity(let v):
        if start <= 2 && 2 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 2, protoFieldName: "api_key_security", jsonFieldName: "apiKeySecurity", swiftFieldName: "apiKeySecurity")
        }
      case .oauth2ImplicitSecurity(let v):
        if start <= 3 && 3 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "oauth2_implicit_security", jsonFieldName: "oauth2ImplicitSecurity", swiftFieldName: "oauth2ImplicitSecurity")
        }
      case .oauth2PasswordSecurity(let v):
        if start <= 4 && 4 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 4, protoFieldName: "oauth2_password_security", jsonFieldName: "oauth2PasswordSecurity", swiftFieldName: "oauth2PasswordSecurity")
        }
      case .oauth2ApplicationSecurity(let v):
        if start <= 5 && 5 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 5, protoFieldName: "oauth2_application_security", jsonFieldName: "oauth2ApplicationSecurity", swiftFieldName: "oauth2ApplicationSecurity")
        }
      case .oauth2AccessCodeSecurity(let v):
        if start <= 6 && 6 < end {
          try visitor.visitSingularMessageField(value: v, protoFieldNumber: 6, protoFieldName: "oauth2_access_code_security", jsonFieldName: "oauth2AccessCodeSecurity", swiftFieldName: "oauth2AccessCodeSecurity")
        }
      case .None:
        break
      }
    }
  }

  public var basicAuthenticationSecurity: Openapi_V2_BasicAuthenticationSecurity {
    get {
      if case .basicAuthenticationSecurity(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_BasicAuthenticationSecurity()
    }
    set {
      _uniqueStorage()._oneof = .basicAuthenticationSecurity(newValue)
    }
  }

  public var apiKeySecurity: Openapi_V2_ApiKeySecurity {
    get {
      if case .apiKeySecurity(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_ApiKeySecurity()
    }
    set {
      _uniqueStorage()._oneof = .apiKeySecurity(newValue)
    }
  }

  public var oauth2ImplicitSecurity: Openapi_V2_Oauth2ImplicitSecurity {
    get {
      if case .oauth2ImplicitSecurity(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Oauth2ImplicitSecurity()
    }
    set {
      _uniqueStorage()._oneof = .oauth2ImplicitSecurity(newValue)
    }
  }

  public var oauth2PasswordSecurity: Openapi_V2_Oauth2PasswordSecurity {
    get {
      if case .oauth2PasswordSecurity(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Oauth2PasswordSecurity()
    }
    set {
      _uniqueStorage()._oneof = .oauth2PasswordSecurity(newValue)
    }
  }

  public var oauth2ApplicationSecurity: Openapi_V2_Oauth2ApplicationSecurity {
    get {
      if case .oauth2ApplicationSecurity(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Oauth2ApplicationSecurity()
    }
    set {
      _uniqueStorage()._oneof = .oauth2ApplicationSecurity(newValue)
    }
  }

  public var oauth2AccessCodeSecurity: Openapi_V2_Oauth2AccessCodeSecurity {
    get {
      if case .oauth2AccessCodeSecurity(let v) = _storage._oneof {
        return v
      }
      return Openapi_V2_Oauth2AccessCodeSecurity()
    }
    set {
      _uniqueStorage()._oneof = .oauth2AccessCodeSecurity(newValue)
    }
  }

  public var oneof: OneOf_Oneof {
    get {return _storage._oneof}
    set {
      _uniqueStorage()._oneof = newValue
    }
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_SecurityDefinitionsItem) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_SecurityRequirement: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_SecurityRequirement"}
  public var protoMessageName: String {return "SecurityRequirement"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedStringArray] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedStringArray.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_SecurityRequirement) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_StringArray: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_StringArray"}
  public var protoMessageName: String {return "StringArray"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "value": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "value": 1,
  ]}

  public var value: [String] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &value)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !value.isEmpty {
      try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: value, protoFieldNumber: 1, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_StringArray) -> Bool {
    if value != other.value {return false}
    return true
  }
}

public struct Openapi_V2_Tag: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Tag"}
  public var protoMessageName: String {return "Tag"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "description": 2,
    "externalDocs": 3,
    "vendorExtension": 4,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "description": 2,
    "external_docs": 3,
    "vendor_extension": 4,
  ]}

  private class _StorageClass {
    typealias ProtobufExtendedMessage = Openapi_V2_Tag
    var _name: String = ""
    var _description_p: String = ""
    var _externalDocs: Openapi_V2_ExternalDocs? = nil
    var _vendorExtension: [Openapi_V2_NamedAny] = []

    init() {}

    func decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
      let handled: Bool
      switch protoFieldNumber {
      case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_name)
      case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &_description_p)
      case 3: handled = try setter.decodeSingularMessageField(fieldType: Openapi_V2_ExternalDocs.self, value: &_externalDocs)
      case 4: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &_vendorExtension)
      default:
        handled = false
      }
      return handled
    }

    func traverse(visitor: inout ProtobufVisitor) throws {
      if _name != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
      }
      if _description_p != "" {
        try visitor.visitSingularField(fieldType: ProtobufString.self, value: _description_p, protoFieldNumber: 2, protoFieldName: "description", jsonFieldName: "description", swiftFieldName: "description_p")
      }
      if let v = _externalDocs {
        try visitor.visitSingularMessageField(value: v, protoFieldNumber: 3, protoFieldName: "external_docs", jsonFieldName: "externalDocs", swiftFieldName: "externalDocs")
      }
      if !_vendorExtension.isEmpty {
        try visitor.visitRepeatedMessageField(value: _vendorExtension, protoFieldNumber: 4, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
      }
    }

    func isEqualTo(other: _StorageClass) -> Bool {
      if _name != other._name {return false}
      if _description_p != other._description_p {return false}
      if _externalDocs != other._externalDocs {return false}
      if _vendorExtension != other._vendorExtension {return false}
      return true
    }

    func copy() -> _StorageClass {
      let clone = _StorageClass()
      clone._name = _name
      clone._description_p = _description_p
      clone._externalDocs = _externalDocs
      clone._vendorExtension = _vendorExtension
      return clone
    }
  }

  private var _storage = _StorageClass()

  public var name: String {
    get {return _storage._name}
    set {_uniqueStorage()._name = newValue}
  }

  public var description_p: String {
    get {return _storage._description_p}
    set {_uniqueStorage()._description_p = newValue}
  }

  public var externalDocs: Openapi_V2_ExternalDocs {
    get {return _storage._externalDocs ?? Openapi_V2_ExternalDocs()}
    set {_uniqueStorage()._externalDocs = newValue}
  }
  public var hasExternalDocs: Bool {
    return _storage._externalDocs != nil
  }
  public mutating func clearExternalDocs() {
    return _storage._externalDocs = nil
  }

  public var vendorExtension: [Openapi_V2_NamedAny] {
    get {return _storage._vendorExtension}
    set {_uniqueStorage()._vendorExtension = newValue}
  }

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    return try _uniqueStorage().decodeField(setter: &setter, protoFieldNumber: protoFieldNumber)
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    try _storage.traverse(visitor: &visitor)
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Tag) -> Bool {
    return _storage === other._storage || _storage.isEqualTo(other: other._storage)
  }

  private mutating func _uniqueStorage() -> _StorageClass {
    if !isKnownUniquelyReferenced(&_storage) {
      _storage = _storage.copy()
    }
    return _storage
  }
}

public struct Openapi_V2_TypeItem: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_TypeItem"}
  public var protoMessageName: String {return "TypeItem"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "value": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "value": 1,
  ]}

  public var value: [String] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedField(fieldType: ProtobufString.self, value: &value)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !value.isEmpty {
      try visitor.visitRepeatedField(fieldType: ProtobufString.self, value: value, protoFieldNumber: 1, protoFieldName: "value", jsonFieldName: "value", swiftFieldName: "value")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_TypeItem) -> Bool {
    if value != other.value {return false}
    return true
  }
}

///   Any property starting with x- is valid.
public struct Openapi_V2_VendorExtension: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_VendorExtension"}
  public var protoMessageName: String {return "VendorExtension"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "additionalProperties": 1,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "additional_properties": 1,
  ]}

  public var additionalProperties: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &additionalProperties)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if !additionalProperties.isEmpty {
      try visitor.visitRepeatedMessageField(value: additionalProperties, protoFieldNumber: 1, protoFieldName: "additional_properties", jsonFieldName: "additionalProperties", swiftFieldName: "additionalProperties")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_VendorExtension) -> Bool {
    if additionalProperties != other.additionalProperties {return false}
    return true
  }
}

public struct Openapi_V2_Xml: ProtobufGeneratedMessage {
  public var swiftClassName: String {return "Openapi_V2_Xml"}
  public var protoMessageName: String {return "Xml"}
  public var protoPackageName: String {return "openapi.v2"}
  public var jsonFieldNames: [String: Int] {return [
    "name": 1,
    "namespace": 2,
    "prefix": 3,
    "attribute": 4,
    "wrapped": 5,
    "vendorExtension": 6,
  ]}
  public var protoFieldNames: [String: Int] {return [
    "name": 1,
    "namespace": 2,
    "prefix": 3,
    "attribute": 4,
    "wrapped": 5,
    "vendor_extension": 6,
  ]}

  public var name: String = ""

  public var namespace: String = ""

  public var prefix: String = ""

  public var attribute: Bool = false

  public var wrapped: Bool = false

  public var vendorExtension: [Openapi_V2_NamedAny] = []

  public init() {}

  public mutating func _protoc_generated_decodeField(setter: inout ProtobufFieldDecoder, protoFieldNumber: Int) throws -> Bool {
    let handled: Bool
    switch protoFieldNumber {
    case 1: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &name)
    case 2: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &namespace)
    case 3: handled = try setter.decodeSingularField(fieldType: ProtobufString.self, value: &prefix)
    case 4: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &attribute)
    case 5: handled = try setter.decodeSingularField(fieldType: ProtobufBool.self, value: &wrapped)
    case 6: handled = try setter.decodeRepeatedMessageField(fieldType: Openapi_V2_NamedAny.self, value: &vendorExtension)
    default:
      handled = false
    }
    return handled
  }

  public func _protoc_generated_traverse(visitor: inout ProtobufVisitor) throws {
    if name != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: name, protoFieldNumber: 1, protoFieldName: "name", jsonFieldName: "name", swiftFieldName: "name")
    }
    if namespace != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: namespace, protoFieldNumber: 2, protoFieldName: "namespace", jsonFieldName: "namespace", swiftFieldName: "namespace")
    }
    if prefix != "" {
      try visitor.visitSingularField(fieldType: ProtobufString.self, value: prefix, protoFieldNumber: 3, protoFieldName: "prefix", jsonFieldName: "prefix", swiftFieldName: "prefix")
    }
    if attribute != false {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: attribute, protoFieldNumber: 4, protoFieldName: "attribute", jsonFieldName: "attribute", swiftFieldName: "attribute")
    }
    if wrapped != false {
      try visitor.visitSingularField(fieldType: ProtobufBool.self, value: wrapped, protoFieldNumber: 5, protoFieldName: "wrapped", jsonFieldName: "wrapped", swiftFieldName: "wrapped")
    }
    if !vendorExtension.isEmpty {
      try visitor.visitRepeatedMessageField(value: vendorExtension, protoFieldNumber: 6, protoFieldName: "vendor_extension", jsonFieldName: "vendorExtension", swiftFieldName: "vendorExtension")
    }
  }

  public func _protoc_generated_isEqualTo(other: Openapi_V2_Xml) -> Bool {
    if name != other.name {return false}
    if namespace != other.namespace {return false}
    if prefix != other.prefix {return false}
    if attribute != other.attribute {return false}
    if wrapped != other.wrapped {return false}
    if vendorExtension != other.vendorExtension {return false}
    return true
  }
}

public func ==(lhs: Openapi_V2_AdditionalPropertiesItem.OneOf_Oneof, rhs: Openapi_V2_AdditionalPropertiesItem.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.schema(let l), .schema(let r)): return l == r
  case (.boolean(let l), .boolean(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}

public func ==(lhs: Openapi_V2_NonBodyParameter.OneOf_Oneof, rhs: Openapi_V2_NonBodyParameter.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.headerParameterSubSchema(let l), .headerParameterSubSchema(let r)): return l == r
  case (.formDataParameterSubSchema(let l), .formDataParameterSubSchema(let r)): return l == r
  case (.queryParameterSubSchema(let l), .queryParameterSubSchema(let r)): return l == r
  case (.pathParameterSubSchema(let l), .pathParameterSubSchema(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}

public func ==(lhs: Openapi_V2_Parameter.OneOf_Oneof, rhs: Openapi_V2_Parameter.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.bodyParameter(let l), .bodyParameter(let r)): return l == r
  case (.nonBodyParameter(let l), .nonBodyParameter(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}

public func ==(lhs: Openapi_V2_ParametersItem.OneOf_Oneof, rhs: Openapi_V2_ParametersItem.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.parameter(let l), .parameter(let r)): return l == r
  case (.jsonReference(let l), .jsonReference(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}

public func ==(lhs: Openapi_V2_ResponseValue.OneOf_Oneof, rhs: Openapi_V2_ResponseValue.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.response(let l), .response(let r)): return l == r
  case (.jsonReference(let l), .jsonReference(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}

public func ==(lhs: Openapi_V2_SchemaItem.OneOf_Oneof, rhs: Openapi_V2_SchemaItem.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.schema(let l), .schema(let r)): return l == r
  case (.fileSchema(let l), .fileSchema(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}

public func ==(lhs: Openapi_V2_SecurityDefinitionsItem.OneOf_Oneof, rhs: Openapi_V2_SecurityDefinitionsItem.OneOf_Oneof) -> Bool {
  switch (lhs, rhs) {
  case (.basicAuthenticationSecurity(let l), .basicAuthenticationSecurity(let r)): return l == r
  case (.apiKeySecurity(let l), .apiKeySecurity(let r)): return l == r
  case (.oauth2ImplicitSecurity(let l), .oauth2ImplicitSecurity(let r)): return l == r
  case (.oauth2PasswordSecurity(let l), .oauth2PasswordSecurity(let r)): return l == r
  case (.oauth2ApplicationSecurity(let l), .oauth2ApplicationSecurity(let r)): return l == r
  case (.oauth2AccessCodeSecurity(let l), .oauth2AccessCodeSecurity(let r)): return l == r
  case (.None, .None): return true
  default: return false
  }
}
